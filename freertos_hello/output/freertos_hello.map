Component: ARM Compiler 6.13.1 Tool: armlink [5d895400]

==============================================================================

Section Cross References

    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to memseta.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to memseta.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for memset
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxPendedTicks) for uxPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxPendedTicks) for uxPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.text.vTaskSetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.text.pvTaskGetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) for CLOCK_GetFlexCommClkFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.text.BOARD_InitDebugConsole) refers to board.o(.rodata.str1.1) for .L.str.1
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    board.o(.text.BOARD_InitSDRAM) refers to board.o(.text.CLOCK_GetEmcClkFreq) for CLOCK_GetEmcClkFreq
    board.o(.text.BOARD_InitSDRAM) refers to fsl_emc.o(.text.EMC_Init) for EMC_Init
    board.o(.text.BOARD_InitSDRAM) refers to fsl_emc.o(.text.EMC_DynamicMemInit) for EMC_DynamicMemInit
    board.o(.text.BOARD_InitSDRAM) refers to board.o(.rodata.str1.1) for .L.str.1
    board.o(.text.BOARD_InitSDRAM) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_InitSDRAM) refers to board.o(.text.BOARD_InitSDRAM) for [Anonymous Symbol]
    board.o(.text.CLOCK_GetEmcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    board.o(.ARM.exidx.text.CLOCK_GetEmcClkFreq) refers to board.o(.text.CLOCK_GetEmcClkFreq) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to clock_config.o(.text.POWER_DisablePD) for POWER_DisablePD
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO12M) refers to clock_config.o(.text.BOARD_BootClockFRO12M) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.POWER_DisablePD) refers to clock_config.o(.text.POWER_DisablePD) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to clock_config.o(.text.POWER_DisablePD) for POWER_DisablePD
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockFROHF48M) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFROHF48M) refers to clock_config.o(.text.BOARD_BootClockFROHF48M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to clock_config.o(.text.POWER_DisablePD) for POWER_DisablePD
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockFROHF96M) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFROHF96M) refers to clock_config.o(.text.BOARD_BootClockFROHF96M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to clock_config.o(.text.POWER_DisablePD) for POWER_DisablePD
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to clock_config.o(.rodata..L__const.BOARD_BootClockPLL180M.pllSetup) for .L__const.BOARD_BootClockPLL180M.pllSetup
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to fsl_clock.o(.text.CLOCK_SetPLLFreq) for CLOCK_SetPLLFreq
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for CLOCK_SetupFROClocking
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockPLL180M) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockPLL180M) refers to clock_config.o(.text.BOARD_BootClockPLL180M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO1M) refers to clock_config.o(.text.POWER_DisablePD) for POWER_DisablePD
    clock_config.o(.text.BOARD_BootClockFRO1M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO1M) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.BOARD_BootClockFRO1M) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.BOARD_BootClockFRO1M) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.BOARD_BootClockFRO1M) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO1M) refers to clock_config.o(.text.BOARD_BootClockFRO1M) for [Anonymous Symbol]
    clock_config.o(.text.ClocksFunc_1) refers to clock_config.o(.text.POWER_DisablePD) for POWER_DisablePD
    clock_config.o(.text.ClocksFunc_1) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.ClocksFunc_1) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    clock_config.o(.text.ClocksFunc_1) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    clock_config.o(.text.ClocksFunc_1) refers to clock_config.o(.rodata..L__const.ClocksFunc_1.pllSetup) for .L__const.ClocksFunc_1.pllSetup
    clock_config.o(.text.ClocksFunc_1) refers to fsl_clock.o(.text.CLOCK_SetPLLFreq) for CLOCK_SetPLLFreq
    clock_config.o(.text.ClocksFunc_1) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    clock_config.o(.text.ClocksFunc_1) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.ClocksFunc_1) refers to clock_config.o(.text.ClocksFunc_1) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.IOCON_PinMuxSet) for IOCON_PinMuxSet
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock) refers to pin_mux.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.IOCON_PinMuxSet) refers to pin_mux.o(.text.IOCON_PinMuxSet) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_Init) refers to generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_GetList) refers to generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    generic_list.o(.text.LIST_AddTail) refers to generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    generic_list.o(.text.LIST_AddTail) refers to generic_list.o(.text.LIST_Scan) for LIST_Scan
    generic_list.o(.text.LIST_AddTail) refers to generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.DisableGlobalIRQ) refers to generic_list.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.EnableGlobalIRQ) refers to generic_list.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_Scan) refers to generic_list.o(.text.LIST_Scan) for [Anonymous Symbol]
    generic_list.o(.text.LIST_AddHead) refers to generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    generic_list.o(.text.LIST_AddHead) refers to generic_list.o(.text.LIST_Scan) for LIST_Scan
    generic_list.o(.text.LIST_AddHead) refers to generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    generic_list.o(.text.LIST_RemoveHead) refers to generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    generic_list.o(.text.LIST_RemoveHead) refers to generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    generic_list.o(.text.LIST_RemoveElement) refers to generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    generic_list.o(.text.LIST_RemoveElement) refers to generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    generic_list.o(.text.LIST_AddPrevElement) refers to generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    generic_list.o(.text.LIST_AddPrevElement) refers to generic_list.o(.text.LIST_Scan) for LIST_Scan
    generic_list.o(.text.LIST_AddPrevElement) refers to generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_Init) refers to memseta.o(.text) for memset
    serial_manager.o(.text.SerialManager_Init) refers to serial_port_uart.o(.text.Serial_UartInit) for Serial_UartInit
    serial_manager.o(.text.SerialManager_Init) refers to serial_manager.o(.rodata.str1.1) for .L.str.1
    serial_manager.o(.text.SerialManager_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_Init) refers to serial_manager.o(.text.SerialManager_Init) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_Deinit) refers to serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    serial_manager.o(.text.SerialManager_Deinit) refers to serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    serial_manager.o(.text.SerialManager_Deinit) refers to serial_port_uart.o(.text.Serial_UartDeinit) for Serial_UartDeinit
    serial_manager.o(.text.SerialManager_Deinit) refers to serial_manager.o(.rodata.str1.1) for .L.str.2
    serial_manager.o(.text.SerialManager_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_Deinit) refers to serial_manager.o(.text.SerialManager_Deinit) for [Anonymous Symbol]
    serial_manager.o(.ARM.exidx.text.DisableGlobalIRQ) refers to serial_manager.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    serial_manager.o(.ARM.exidx.text.EnableGlobalIRQ) refers to serial_manager.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to memseta.o(.text) for memset
    serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to serial_manager.o(.rodata.str1.1) for .L.str.2
    serial_manager.o(.text.SerialManager_OpenWriteHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle) refers to serial_manager.o(.text.SerialManager_OpenWriteHandle) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to memseta.o(.text) for memset
    serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to serial_manager.o(.rodata.str1.1) for .L.str.3
    serial_manager.o(.text.SerialManager_CloseWriteHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle) refers to serial_manager.o(.text.SerialManager_CloseWriteHandle) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_OpenReadHandle) refers to serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    serial_manager.o(.text.SerialManager_OpenReadHandle) refers to serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    serial_manager.o(.text.SerialManager_OpenReadHandle) refers to memseta.o(.text) for memset
    serial_manager.o(.text.SerialManager_OpenReadHandle) refers to serial_manager.o(.rodata.str1.1) for .L.str.2
    serial_manager.o(.text.SerialManager_OpenReadHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle) refers to serial_manager.o(.text.SerialManager_OpenReadHandle) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_CloseReadHandle) refers to serial_manager.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    serial_manager.o(.text.SerialManager_CloseReadHandle) refers to serial_manager.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    serial_manager.o(.text.SerialManager_CloseReadHandle) refers to memseta.o(.text) for memset
    serial_manager.o(.text.SerialManager_CloseReadHandle) refers to serial_manager.o(.rodata.str1.1) for .L.str.1
    serial_manager.o(.text.SerialManager_CloseReadHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle) refers to serial_manager.o(.text.SerialManager_CloseReadHandle) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_WriteBlocking) refers to serial_manager.o(.text.SerialManager_Write) for SerialManager_Write
    serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking) refers to serial_manager.o(.text.SerialManager_WriteBlocking) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_Write) refers to serial_manager.o(.text.SerialManager_StartWriting) for SerialManager_StartWriting
    serial_manager.o(.text.SerialManager_Write) refers to serial_manager.o(.rodata.str1.1) for .L.str.3
    serial_manager.o(.text.SerialManager_Write) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_Write) refers to serial_manager.o(.text.SerialManager_Write) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_ReadBlocking) refers to serial_manager.o(.text.SerialManager_Read) for SerialManager_Read
    serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking) refers to serial_manager.o(.text.SerialManager_ReadBlocking) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_Read) refers to serial_manager.o(.text.SerialManager_StartReading) for SerialManager_StartReading
    serial_manager.o(.text.SerialManager_Read) refers to serial_manager.o(.rodata.str1.1) for .L.str.5
    serial_manager.o(.text.SerialManager_Read) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_Read) refers to serial_manager.o(.text.SerialManager_Read) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_EnterLowpower) refers to serial_port_uart.o(.text.Serial_UartEnterLowpower) for Serial_UartEnterLowpower
    serial_manager.o(.text.SerialManager_EnterLowpower) refers to serial_manager.o(.rodata.str1.1) for .L.str.2
    serial_manager.o(.text.SerialManager_EnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower) refers to serial_manager.o(.text.SerialManager_EnterLowpower) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_ExitLowpower) refers to serial_port_uart.o(.text.Serial_UartExitLowpower) for Serial_UartExitLowpower
    serial_manager.o(.text.SerialManager_ExitLowpower) refers to serial_manager.o(.rodata.str1.1) for .L.str.2
    serial_manager.o(.text.SerialManager_ExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower) refers to serial_manager.o(.text.SerialManager_ExitLowpower) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_StartWriting) refers to serial_port_uart.o(.text.Serial_UartWrite) for Serial_UartWrite
    serial_manager.o(.ARM.exidx.text.SerialManager_StartWriting) refers to serial_manager.o(.text.SerialManager_StartWriting) for [Anonymous Symbol]
    serial_manager.o(.text.SerialManager_StartReading) refers to serial_port_uart.o(.text.Serial_UartRead) for Serial_UartRead
    serial_manager.o(.ARM.exidx.text.SerialManager_StartReading) refers to serial_manager.o(.text.SerialManager_StartReading) for [Anonymous Symbol]
    serial_port_uart.o(.text.Serial_UartInit) refers to usart_adapter.o(.text.HAL_UartInit) for HAL_UartInit
    serial_port_uart.o(.text.Serial_UartInit) refers to serial_port_uart.o(.rodata.str1.1) for .L.str.1
    serial_port_uart.o(.text.Serial_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_port_uart.o(.ARM.exidx.text.Serial_UartInit) refers to serial_port_uart.o(.text.Serial_UartInit) for [Anonymous Symbol]
    serial_port_uart.o(.text.Serial_UartDeinit) refers to usart_adapter.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    serial_port_uart.o(.text.Serial_UartDeinit) refers to serial_port_uart.o(.rodata.str1.1) for .L.str.2
    serial_port_uart.o(.text.Serial_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit) refers to serial_port_uart.o(.text.Serial_UartDeinit) for [Anonymous Symbol]
    serial_port_uart.o(.text.Serial_UartWrite) refers to usart_adapter.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    serial_port_uart.o(.text.Serial_UartWrite) refers to serial_port_uart.o(.rodata.str1.1) for .L.str.2
    serial_port_uart.o(.text.Serial_UartWrite) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite) refers to serial_port_uart.o(.text.Serial_UartWrite) for [Anonymous Symbol]
    serial_port_uart.o(.text.Serial_UartRead) refers to usart_adapter.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    serial_port_uart.o(.text.Serial_UartRead) refers to serial_port_uart.o(.rodata.str1.1) for .L.str.2
    serial_port_uart.o(.text.Serial_UartRead) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_port_uart.o(.ARM.exidx.text.Serial_UartRead) refers to serial_port_uart.o(.text.Serial_UartRead) for [Anonymous Symbol]
    serial_port_uart.o(.text.Serial_UartEnterLowpower) refers to usart_adapter.o(.text.HAL_UartEnterLowpower) for HAL_UartEnterLowpower
    serial_port_uart.o(.text.Serial_UartEnterLowpower) refers to serial_port_uart.o(.rodata.str1.1) for .L.str.2
    serial_port_uart.o(.text.Serial_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower) refers to serial_port_uart.o(.text.Serial_UartEnterLowpower) for [Anonymous Symbol]
    serial_port_uart.o(.text.Serial_UartExitLowpower) refers to usart_adapter.o(.text.HAL_UartExitLowpower) for HAL_UartExitLowpower
    serial_port_uart.o(.text.Serial_UartExitLowpower) refers to serial_port_uart.o(.rodata.str1.1) for .L.str.2
    serial_port_uart.o(.text.Serial_UartExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower) refers to serial_port_uart.o(.text.Serial_UartExitLowpower) for [Anonymous Symbol]
    usart_adapter.o(.text.HAL_UartInit) refers to fsl_usart.o(.text.USART_GetDefaultConfig) for USART_GetDefaultConfig
    usart_adapter.o(.text.HAL_UartInit) refers to usart_adapter.o(.rodata.s_UsartAdapterBase) for s_UsartAdapterBase
    usart_adapter.o(.text.HAL_UartInit) refers to fsl_usart.o(.text.USART_Init) for USART_Init
    usart_adapter.o(.text.HAL_UartInit) refers to usart_adapter.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    usart_adapter.o(.text.HAL_UartInit) refers to usart_adapter.o(.rodata.str1.1) for .L.str
    usart_adapter.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    usart_adapter.o(.ARM.exidx.text.HAL_UartInit) refers to usart_adapter.o(.text.HAL_UartInit) for [Anonymous Symbol]
    usart_adapter.o(.ARM.exidx.text.HAL_UartGetStatus) refers to usart_adapter.o(.text.HAL_UartGetStatus) for [Anonymous Symbol]
    usart_adapter.o(.text.HAL_UartDeinit) refers to usart_adapter.o(.rodata.s_UsartAdapterBase) for s_UsartAdapterBase
    usart_adapter.o(.text.HAL_UartDeinit) refers to fsl_usart.o(.text.USART_Deinit) for USART_Deinit
    usart_adapter.o(.text.HAL_UartDeinit) refers to usart_adapter.o(.rodata.str1.1) for .L.str
    usart_adapter.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    usart_adapter.o(.ARM.exidx.text.HAL_UartDeinit) refers to usart_adapter.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    usart_adapter.o(.text.HAL_UartReceiveBlocking) refers to usart_adapter.o(.rodata.s_UsartAdapterBase) for s_UsartAdapterBase
    usart_adapter.o(.text.HAL_UartReceiveBlocking) refers to fsl_usart.o(.text.USART_ReadBlocking) for USART_ReadBlocking
    usart_adapter.o(.text.HAL_UartReceiveBlocking) refers to usart_adapter.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    usart_adapter.o(.text.HAL_UartReceiveBlocking) refers to usart_adapter.o(.rodata.str1.1) for .L.str
    usart_adapter.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    usart_adapter.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to usart_adapter.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    usart_adapter.o(.text.HAL_UartSendBlocking) refers to usart_adapter.o(.rodata.s_UsartAdapterBase) for s_UsartAdapterBase
    usart_adapter.o(.text.HAL_UartSendBlocking) refers to fsl_usart.o(.text.USART_WriteBlocking) for USART_WriteBlocking
    usart_adapter.o(.text.HAL_UartSendBlocking) refers to usart_adapter.o(.rodata.str1.1) for .L.str
    usart_adapter.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    usart_adapter.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to usart_adapter.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    usart_adapter.o(.text.HAL_UartEnterLowpower) refers to usart_adapter.o(.rodata.str1.1) for .L.str
    usart_adapter.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    usart_adapter.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to usart_adapter.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    usart_adapter.o(.text.HAL_UartExitLowpower) refers to usart_adapter.o(.rodata.str1.1) for .L.str
    usart_adapter.o(.text.HAL_UartExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    usart_adapter.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to usart_adapter.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    system_lpc54608.o(.text.SystemInit) refers to startup_lpc54608.o(.isr_vector) for __Vectors
    system_lpc54608.o(.text.SystemInit) refers to system_lpc54608.o(.text.SystemInitHook) for SystemInitHook
    system_lpc54608.o(.ARM.exidx.text.SystemInit) refers to system_lpc54608.o(.text.SystemInit) for [Anonymous Symbol]
    system_lpc54608.o(.ARM.exidx.text.SystemInitHook) refers to system_lpc54608.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_lpc54608.o(.text.SystemCoreClockUpdate) refers to system_lpc54608.o(.text.getWdtOscFreq) for getWdtOscFreq
    system_lpc54608.o(.text.SystemCoreClockUpdate) refers to system_lpc54608.o(.text.findPllPreDiv) for findPllPreDiv
    system_lpc54608.o(.text.SystemCoreClockUpdate) refers to system_lpc54608.o(.text.findPllPostDiv) for findPllPostDiv
    system_lpc54608.o(.text.SystemCoreClockUpdate) refers to system_lpc54608.o(.text.findPllMMult) for findPllMMult
    system_lpc54608.o(.text.SystemCoreClockUpdate) refers to uldiv.o(.text) for __aeabi_uldivmod
    system_lpc54608.o(.text.SystemCoreClockUpdate) refers to system_lpc54608.o(.data.SystemCoreClock) for SystemCoreClock
    system_lpc54608.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_lpc54608.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_lpc54608.o(.ARM.exidx.text.getWdtOscFreq) refers to system_lpc54608.o(.text.getWdtOscFreq) for [Anonymous Symbol]
    system_lpc54608.o(.text.findPllPreDiv) refers to system_lpc54608.o(.text.pllDecodeN) for pllDecodeN
    system_lpc54608.o(.ARM.exidx.text.findPllPreDiv) refers to system_lpc54608.o(.text.findPllPreDiv) for [Anonymous Symbol]
    system_lpc54608.o(.text.findPllPostDiv) refers to system_lpc54608.o(.text.pllDecodeP) for pllDecodeP
    system_lpc54608.o(.ARM.exidx.text.findPllPostDiv) refers to system_lpc54608.o(.text.findPllPostDiv) for [Anonymous Symbol]
    system_lpc54608.o(.text.findPllMMult) refers to system_lpc54608.o(.text.pllDecodeM) for pllDecodeM
    system_lpc54608.o(.ARM.exidx.text.findPllMMult) refers to system_lpc54608.o(.text.findPllMMult) for [Anonymous Symbol]
    system_lpc54608.o(.ARM.exidx.text.pllDecodeN) refers to system_lpc54608.o(.text.pllDecodeN) for [Anonymous Symbol]
    system_lpc54608.o(.ARM.exidx.text.pllDecodeP) refers to system_lpc54608.o(.text.pllDecodeP) for [Anonymous Symbol]
    system_lpc54608.o(.ARM.exidx.text.pllDecodeM) refers to system_lpc54608.o(.text.pllDecodeM) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_AttachClk) refers to fsl_clock.o(.text.CLOCK_AttachClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockAttachId) refers to fsl_clock.o(.text.CLOCK_GetClockAttachId) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetClkDiv) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupFROClocking) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFROClocking) refers to fsl_clock.o(.text.CLOCK_SetupFROClocking) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.POWER_DisablePD) refers to fsl_clock.o(.text.POWER_DisablePD) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetWdtOscFreq) for CLOCK_GetWdtOscFreq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for CLOCK_GetUsbPllOutFreq
    fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for CLOCK_GetAudioPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for CLOCK_GetFro12MFreq
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetWdtOscFreq) for CLOCK_GetWdtOscFreq
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetExtClkFreq) refers to fsl_clock.o(.text.CLOCK_GetExtClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetWdtOscFreq) refers to fsl_clock.o(.text.CLOCK_GetWdtOscFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFroHfFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllOutFreq) refers to fsl_clock.o(.bss.s_Pll_Freq) for s_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllOutFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) refers to fsl_clock.o(.bss.s_Usb_Pll_Freq) for s_Usb_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPllOutFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) refers to fsl_clock.o(.bss.s_Audio_Pll_Freq) for s_Audio_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPllOutFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc32KFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc32KFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSpifiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetSpifiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetSpifiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for CLOCK_GetUsbPllOutFreq
    fsl_clock.o(.text.CLOCK_GetSpifiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetSpifiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for CLOCK_GetAudioPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSpifiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSpifiClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for CLOCK_GetUsbPllOutFreq
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for CLOCK_GetAudioPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAdcClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for CLOCK_GetUsbPllOutFreq
    fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb0ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for CLOCK_GetUsbPllOutFreq
    fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb1ClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetMclkClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetMclkClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for CLOCK_GetAudioPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMclkClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMclkClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for CLOCK_GetAudioPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSctClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSctClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq) for CLOCK_GetUsbPllOutFreq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq) for CLOCK_GetAudioPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSdioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSdioClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetLcdClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetLcdClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetLcdClkFreq) refers to fsl_clock.o(.text.CLOCK_GetLcdClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetLcdClkIn) refers to fsl_clock.o(.text.CLOCK_GetLcdClkIn) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFro12MFreq) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetI2SMClkFreq) refers to fsl_clock.o(.text.CLOCK_GetI2SMClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAsyncApbClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAsyncApbClkSrc) for CLOCK_GetAsyncApbClkSrc
    fsl_clock.o(.text.CLOCK_GetAsyncApbClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAsyncApbClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAsyncApbClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAsyncApbClkSrc) refers to fsl_clock.o(.text.CLOCK_GetAsyncApbClkSrc) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetMCanClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMCanClkFreq) refers to fsl_clock.o(.text.CLOCK_GetMCanClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for CLOCK_GetFro12MFreq
    fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFrgClkFreq) for CLOCK_GetFrgClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexCommClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFrgClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFRGInputClock) for CLOCK_GetFRGInputClock
    fsl_clock.o(.text.CLOCK_GetFrgClkFreq) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFrgClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFrgClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFRGInputClock) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetFRGInputClock) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for CLOCK_GetFro12MFreq
    fsl_clock.o(.text.CLOCK_GetFRGInputClock) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetFRGInputClock) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFRGInputClock) refers to fsl_clock.o(.text.CLOCK_GetFRGInputClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetDmicClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for CLOCK_GetFro12MFreq
    fsl_clock.o(.text.CLOCK_GetDmicClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetDmicClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetDmicClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetDmicClkFreq) refers to fsl_clock.o(.text.CLOCK_GetWdtOscFreq) for CLOCK_GetWdtOscFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetDmicClkFreq) refers to fsl_clock.o(.text.CLOCK_GetDmicClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetFRGClock) refers to fsl_clock.o(.text.CLOCK_GetFRGInputClock) for CLOCK_GetFRGInputClock
    fsl_clock.o(.text.CLOCK_SetFRGClock) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_clock.o(.text.CLOCK_SetFRGClock) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFRGClock) refers to fsl_clock.o(.text.CLOCK_SetFRGClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetClockOutClkFreq) for CLOCK_GetClockOutClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFroHfFreq) for CLOCK_GetFroHfFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetMclkClkFreq) for CLOCK_GetMclkClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFro12MFreq) for CLOCK_GetFro12MFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPllOutFreq) for CLOCK_GetPllOutFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFrgClkFreq) for CLOCK_GetFrgClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetAsyncApbClkFreq) for CLOCK_GetAsyncApbClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetWdtOscFreq) for CLOCK_GetWdtOscFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCycles) for CLOCK_SetFLASHAccessCycles
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFLASHAccessCyclesForFreq) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFLASHAccessCycles) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCycles) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSystemPLLInClockRate) refers to fsl_clock.o(.text.CLOCK_GetWdtOscFreq) for CLOCK_GetWdtOscFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLInClockRate) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLInClockRate) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLInClockRate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLInClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLInClockRate) for CLOCK_GetSystemPLLInClockRate
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) refers to fsl_clock.o(.text.findPllPreDiv) for findPllPreDiv
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) refers to fsl_clock.o(.text.findPllPostDiv) for findPllPostDiv
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) refers to fsl_clock.o(.text.findPllMMult) for findPllMMult
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLOutFromSetup) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) for [Anonymous Symbol]
    fsl_clock.o(.text.findPllPreDiv) refers to fsl_clock.o(.text.pllDecodeN) for pllDecodeN
    fsl_clock.o(.ARM.exidx.text.findPllPreDiv) refers to fsl_clock.o(.text.findPllPreDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.findPllPostDiv) refers to fsl_clock.o(.text.pllDecodeP) for pllDecodeP
    fsl_clock.o(.ARM.exidx.text.findPllPostDiv) refers to fsl_clock.o(.text.findPllPostDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.findPllMMult) refers to fsl_clock.o(.text.pllDecodeM) for pllDecodeM
    fsl_clock.o(.ARM.exidx.text.findPllMMult) refers to fsl_clock.o(.text.findPllMMult) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPLLOutFromSetup) refers to fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetup) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLInClockRate) for CLOCK_GetAudioPLLInClockRate
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) refers to fsl_clock.o(.text.findPllPreDiv) for findPllPreDiv
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) refers to fsl_clock.o(.text.findPllPostDiv) for findPllPostDiv
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) refers to fsl_clock.o(.text.findPllMMult) for findPllMMult
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromSetup) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLInClockRate) for CLOCK_GetAudioPLLInClockRate
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to fsl_clock.o(.text.findPllPreDiv) for findPllPreDiv
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to dfltui.o(.text) for __aeabi_ui2d
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to fsl_clock.o(.text.findPllPostDiv) for findPllPostDiv
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to fsl_clock.o(.text.Binary2Fractional) for Binary2Fractional
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to dadd.o(.text) for __aeabi_dadd
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to dmul.o(.text) for __aeabi_dmul
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to ddiv.o(.text) for __aeabi_ddiv
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to dfixui.o(.text) for __aeabi_d2uiz
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromFractSetup) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) for [Anonymous Symbol]
    fsl_clock.o(.text.Binary2Fractional) refers to dfltui.o(.text) for __aeabi_ui2d
    fsl_clock.o(.text.Binary2Fractional) refers to ddiv.o(.text) for __aeabi_ddiv
    fsl_clock.o(.text.Binary2Fractional) refers to dadd.o(.text) for __aeabi_dadd
    fsl_clock.o(.ARM.exidx.text.Binary2Fractional) refers to fsl_clock.o(.text.Binary2Fractional) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetStoredPLLClockRate) refers to fsl_clock.o(.bss.s_Pll_Freq) for s_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredPLLClockRate) refers to fsl_clock.o(.text.CLOCK_SetStoredPLLClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetStoredAudioPLLClockRate) refers to fsl_clock.o(.bss.s_Audio_Pll_Freq) for s_Audio_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredAudioPLLClockRate) refers to fsl_clock.o(.text.CLOCK_SetStoredAudioPLLClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetStoredUsbPLLClockRate) refers to fsl_clock.o(.bss.s_Usb_Pll_Freq) for s_Usb_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredUsbPLLClockRate) refers to fsl_clock.o(.text.CLOCK_SetStoredUsbPLLClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutClockRate) refers to fsl_clock.o(.bss.s_Pll_Freq) for s_Pll_Freq
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutClockRate) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetupUpdate) for CLOCK_GetSystemPLLOutFromSetupUpdate
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLOutClockRate) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLOutClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup) for CLOCK_GetSystemPLLOutFromSetup
    fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetupUpdate) refers to fsl_clock.o(.bss.s_Pll_Freq) for s_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLOutFromSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetupUpdate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutClockRate) refers to fsl_clock.o(.bss.s_Audio_Pll_Freq) for s_Audio_Pll_Freq
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutClockRate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetupUpdate) for CLOCK_GetAudioPLLOutFromSetupUpdate
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutClockRate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup) for CLOCK_GetAudioPLLOutFromSetup
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetupUpdate) refers to fsl_clock.o(.bss.s_Audio_Pll_Freq) for s_Audio_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetupUpdate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsbPLLOutClockRate) refers to fsl_clock.o(.bss.s_Usb_Pll_Freq) for s_Usb_Pll_Freq
    fsl_clock.o(.text.CLOCK_GetUsbPLLOutClockRate) refers to fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetupUpdate) for CLOCK_GetUsbPLLOutFromSetupUpdate
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPLLOutClockRate) refers to fsl_clock.o(.text.CLOCK_GetUsbPLLOutClockRate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetup) for CLOCK_GetUsbPLLOutFromSetup
    fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetupUpdate) refers to fsl_clock.o(.bss.s_Usb_Pll_Freq) for s_Usb_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPLLOutFromSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetupUpdate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupPLLData) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLInClockRate) for CLOCK_GetSystemPLLInClockRate
    fsl_clock.o(.text.CLOCK_SetupPLLData) refers to fsl_clock.o(.text.CLOCK_GetPllConfig) for CLOCK_GetPllConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLLData) refers to fsl_clock.o(.text.CLOCK_SetupPLLData) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllConfig) refers to fsl_clock.o(.bss.s_PllSetupCacheStruct) for s_PllSetupCacheStruct
    fsl_clock.o(.text.CLOCK_GetPllConfig) refers to fsl_clock.o(.bss.s_FinHzCache) for s_FinHzCache
    fsl_clock.o(.text.CLOCK_GetPllConfig) refers to fsl_clock.o(.bss.s_FoutHzCache) for s_FoutHzCache
    fsl_clock.o(.text.CLOCK_GetPllConfig) refers to fsl_clock.o(.text.CLOCK_GetPllConfigInternal) for CLOCK_GetPllConfigInternal
    fsl_clock.o(.text.CLOCK_GetPllConfig) refers to fsl_clock.o(.bss.s_PllSetupCacheIdx) for s_PllSetupCacheIdx
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllConfig) refers to fsl_clock.o(.text.CLOCK_GetPllConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for CLOCK_Enable_SysOsc
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_power_lib.o(.text.POWER_SetPLL) for POWER_SetPLL
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.POWER_EnablePD) for POWER_EnablePD
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq) for CLOCK_SetFLASHAccessCyclesForFreq
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.CLOCK_IsSystemPLLLocked) for CLOCK_IsSystemPLLLocked
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetupUpdate) for CLOCK_GetSystemPLLOutFromSetupUpdate
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.bss.s_Pll_Freq) for s_Pll_Freq
    fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for POWER_SetVoltageForFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupSystemPLLPrec) refers to fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_Enable_SysOsc) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.POWER_EnablePD) refers to fsl_clock.o(.text.POWER_EnablePD) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSystemPLLLocked) refers to fsl_clock.o(.text.CLOCK_IsSystemPLLLocked) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for CLOCK_Enable_SysOsc
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_power_lib.o(.text.POWER_SetPLL) for POWER_SetPLL
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_clock.o(.text.POWER_EnablePD) for POWER_EnablePD
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_clock.o(.text.CLOCK_IsAudioPLLLocked) for CLOCK_IsAudioPLLLocked
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetupUpdate) for CLOCK_GetAudioPLLOutFromSetupUpdate
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupAudioPLLPrec) refers to fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsAudioPLLLocked) refers to fsl_clock.o(.text.CLOCK_IsAudioPLLLocked) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for CLOCK_Enable_SysOsc
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_power_lib.o(.text.POWER_SetPLL) for POWER_SetPLL
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_clock.o(.text.POWER_EnablePD) for POWER_EnablePD
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_clock.o(.text.CLOCK_IsAudioPLLLocked) for CLOCK_IsAudioPLLLocked
    fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate) for CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupAudioPLLPrecFract) refers to fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup) for CLOCK_GetAudioPLLOutFromFractSetup
    fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate) refers to fsl_clock.o(.bss.s_Audio_Pll_Freq) for s_Audio_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupAudioPLLData) refers to fsl_clock.o(.text.CLOCK_GetAudioPLLInClockRate) for CLOCK_GetAudioPLLInClockRate
    fsl_clock.o(.text.CLOCK_SetupAudioPLLData) refers to fsl_clock.o(.text.CLOCK_GetPllConfig) for CLOCK_GetPllConfig
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupAudioPLLData) refers to fsl_clock.o(.text.CLOCK_SetupAudioPLLData) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for CLOCK_Enable_SysOsc
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_power_lib.o(.text.POWER_SetPLL) for POWER_SetPLL
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_clock.o(.text.POWER_EnablePD) for POWER_EnablePD
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_clock.o(.text.CLOCK_IsSystemPLLLocked) for CLOCK_IsSystemPLLLocked
    fsl_clock.o(.text.CLOCK_SetPLLFreq) refers to fsl_clock.o(.bss.s_Pll_Freq) for s_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPLLFreq) refers to fsl_clock.o(.text.CLOCK_SetPLLFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for CLOCK_Enable_SysOsc
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_power_lib.o(.text.POWER_SetPLL) for POWER_SetPLL
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_clock.o(.text.POWER_EnablePD) for POWER_EnablePD
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_clock.o(.text.CLOCK_IsAudioPLLLocked) for CLOCK_IsAudioPLLLocked
    fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) refers to fsl_clock.o(.bss.s_Audio_Pll_Freq) for s_Audio_Pll_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetAudioPLLFreq) refers to fsl_clock.o(.text.CLOCK_SetAudioPLLFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_clock.o(.text.CLOCK_Enable_SysOsc) for CLOCK_Enable_SysOsc
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_power_lib.o(.text.POWER_SetPLL) for POWER_SetPLL
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_power_lib.o(.text.POWER_SetUsbPhy) for POWER_SetUsbPhy
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_clock.o(.text.POWER_EnablePD) for POWER_EnablePD
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_clock.o(.text.CLOCK_IsUsbPLLLocked) for CLOCK_IsUsbPLLLocked
    fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) refers to fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetupUpdate) for CLOCK_GetUsbPLLOutFromSetupUpdate
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetUsbPLLFreq) refers to fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsUsbPLLLocked) refers to fsl_clock.o(.text.CLOCK_IsUsbPLLLocked) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupSystemPLLMult) refers to fsl_clock.o(.text.pllEncodeM) for pllEncodeM
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupSystemPLLMult) refers to fsl_clock.o(.text.CLOCK_SetupSystemPLLMult) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllEncodeM) refers to fsl_clock.o(.text.pllEncodeM) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) for CLOCK_SetUsbPLLFreq
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) for CLOCK_SetUsbPLLFreq
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0HostClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_power_lib.o(.text.POWER_SetUsbPhy) for POWER_SetUsbPhy
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) for CLOCK_SetUsbPLLFreq
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0DeviceClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_power_lib.o(.text.POWER_SetUsbPhy) for POWER_SetUsbPhy
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_SetUsbPLLFreq) for CLOCK_SetUsbPLLFreq
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_SetClkDiv) for CLOCK_SetClkDiv
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.POWER_DisablePD) for POWER_DisablePD
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0HostClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllDecodeN) refers to fsl_clock.o(.text.pllDecodeN) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllDecodeP) refers to fsl_clock.o(.text.pllDecodeP) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllDecodeM) refers to fsl_clock.o(.text.pllDecodeM) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllConfigInternal) refers to fsl_clock.o(.text.FindGreatestCommonDivisor) for FindGreatestCommonDivisor
    fsl_clock.o(.text.CLOCK_GetPllConfigInternal) refers to fsl_clock.o(.text.pllFindSel) for pllFindSel
    fsl_clock.o(.text.CLOCK_GetPllConfigInternal) refers to fsl_clock.o(.text.pllEncodeM) for pllEncodeM
    fsl_clock.o(.text.CLOCK_GetPllConfigInternal) refers to fsl_clock.o(.text.pllEncodeN) for pllEncodeN
    fsl_clock.o(.text.CLOCK_GetPllConfigInternal) refers to fsl_clock.o(.text.pllEncodeP) for pllEncodeP
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllConfigInternal) refers to fsl_clock.o(.text.CLOCK_GetPllConfigInternal) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.FindGreatestCommonDivisor) refers to fsl_clock.o(.text.FindGreatestCommonDivisor) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllFindSel) refers to fsl_clock.o(.text.pllFindSel) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllEncodeN) refers to fsl_clock.o(.text.pllEncodeN) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.pllEncodeP) refers to fsl_clock.o(.text.pllEncodeP) for [Anonymous Symbol]
    fsl_common.o(.text.EnableDeepSleepIRQ) refers to fsl_common.o(.text.EnableIRQ) for EnableIRQ
    fsl_common.o(.ARM.exidx.text.EnableDeepSleepIRQ) refers to fsl_common.o(.text.EnableDeepSleepIRQ) for [Anonymous Symbol]
    fsl_common.o(.text.EnableIRQ) refers to fsl_common.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_common.o(.ARM.exidx.text.EnableIRQ) refers to fsl_common.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_common.o(.text.DisableDeepSleepIRQ) refers to fsl_common.o(.text.DisableIRQ) for DisableIRQ
    fsl_common.o(.ARM.exidx.text.DisableDeepSleepIRQ) refers to fsl_common.o(.text.DisableDeepSleepIRQ) for [Anonymous Symbol]
    fsl_common.o(.text.DisableIRQ) refers to fsl_common.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    fsl_common.o(.ARM.exidx.text.DisableIRQ) refers to fsl_common.o(.text.DisableIRQ) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to fsl_common.o(.text.DelayLoop) for DelayLoop
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to fsl_common.o(.rodata.str1.1) for .L.str.1
    fsl_common.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_common.o(.ARM.exidx.text.DelayLoop) refers to fsl_common.o(.text.DelayLoop) for [Anonymous Symbol]
    fsl_common.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_common.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_common.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to fsl_common.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    fsl_emc.o(.text.EMC_Init) refers to fsl_emc.o(.text.EMC_GetInstance) for EMC_GetInstance
    fsl_emc.o(.text.EMC_Init) refers to fsl_emc.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_emc.o(.text.EMC_Init) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_emc.o(.ARM.exidx.text.EMC_Init) refers to fsl_emc.o(.text.EMC_Init) for [Anonymous Symbol]
    fsl_emc.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_emc.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_emc.o(.text.EMC_GetInstance) refers to fsl_emc.o(.rodata.str1.1) for .L.str.1
    fsl_emc.o(.text.EMC_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_emc.o(.ARM.exidx.text.EMC_GetInstance) refers to fsl_emc.o(.text.EMC_GetInstance) for [Anonymous Symbol]
    fsl_emc.o(.text.EMC_DynamicMemInit) refers to fsl_emc.o(.text.EMC_CalculateTimerCycles) for EMC_CalculateTimerCycles
    fsl_emc.o(.text.EMC_DynamicMemInit) refers to fsl_common.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_emc.o(.text.EMC_DynamicMemInit) refers to fsl_emc.o(.rodata.cst16) for s_EMCDYCSBases
    fsl_emc.o(.text.EMC_DynamicMemInit) refers to fsl_emc.o(.text.EMC_ModeOffset) for EMC_ModeOffset
    fsl_emc.o(.text.EMC_DynamicMemInit) refers to fsl_emc.o(.rodata.str1.1) for .L.str
    fsl_emc.o(.text.EMC_DynamicMemInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_emc.o(.ARM.exidx.text.EMC_DynamicMemInit) refers to fsl_emc.o(.text.EMC_DynamicMemInit) for [Anonymous Symbol]
    fsl_emc.o(.text.EMC_CalculateTimerCycles) refers to fsl_emc.o(.text.CLOCK_GetEmcClkFreq) for CLOCK_GetEmcClkFreq
    fsl_emc.o(.ARM.exidx.text.EMC_CalculateTimerCycles) refers to fsl_emc.o(.text.EMC_CalculateTimerCycles) for [Anonymous Symbol]
    fsl_emc.o(.ARM.exidx.text.EMC_ModeOffset) refers to fsl_emc.o(.text.EMC_ModeOffset) for [Anonymous Symbol]
    fsl_emc.o(.text.EMC_StaticMemInit) refers to fsl_emc.o(.text.EMC_CalculateTimerCycles) for EMC_CalculateTimerCycles
    fsl_emc.o(.text.EMC_StaticMemInit) refers to fsl_emc.o(.rodata.str1.1) for .L.str
    fsl_emc.o(.text.EMC_StaticMemInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_emc.o(.ARM.exidx.text.EMC_StaticMemInit) refers to fsl_emc.o(.text.EMC_StaticMemInit) for [Anonymous Symbol]
    fsl_emc.o(.text.EMC_Deinit) refers to fsl_emc.o(.text.EMC_GetInstance) for EMC_GetInstance
    fsl_emc.o(.text.EMC_Deinit) refers to fsl_emc.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_emc.o(.ARM.exidx.text.EMC_Deinit) refers to fsl_emc.o(.text.EMC_Deinit) for [Anonymous Symbol]
    fsl_emc.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_emc.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_emc.o(.text.CLOCK_GetEmcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_emc.o(.ARM.exidx.text.CLOCK_GetEmcClkFreq) refers to fsl_emc.o(.text.CLOCK_GetEmcClkFreq) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_GetInstance) refers to fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) for FLEXCOMM_GetInstance
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_flexcomm.o(.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetPeriph) for FLEXCOMM_SetPeriph
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_Init) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for [Anonymous Symbol]
    fsl_flexcomm.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_flexcomm.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_SetPeriph) refers to fsl_flexcomm.o(.text.FLEXCOMM_PeripheralIsPresent) for FLEXCOMM_PeripheralIsPresent
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_SetPeriph) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetPeriph) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM_GetInstance) for FLEXCOMM_GetInstance
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_SetIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM0_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM1_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM2_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM3_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM4_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM5_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM6_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM7_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM8_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommIrqHandler) for s_flexcommIrqHandler
    fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler) refers to fsl_flexcomm.o(.bss.s_flexcommHandle) for s_flexcommHandle
    fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler) refers to fsl_flexcomm.o(.rodata.str1.1) for .L.str.1
    fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM9_DriverIRQHandler) refers to fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_PeripheralIsPresent) refers to fsl_flexcomm.o(.text.FLEXCOMM_PeripheralIsPresent) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_gpio.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_gpio.o(.text.GPIO_PortInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortInit) refers to fsl_gpio.o(.text.GPIO_PortInit) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_gpio.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_SetPeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_SetPeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_SetPeripheralReset) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_ClearPeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_ClearPeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_ClearPeripheralReset) refers to fsl_reset.o(.text.RESET_ClearPeripheralReset) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_PeripheralReset) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for RESET_SetPeripheralReset
    fsl_reset.o(.text.RESET_PeripheralReset) refers to fsl_reset.o(.text.RESET_ClearPeripheralReset) for RESET_ClearPeripheralReset
    fsl_reset.o(.ARM.exidx.text.RESET_PeripheralReset) refers to fsl_reset.o(.text.RESET_PeripheralReset) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_GetInstance) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_GetInstance) refers to fsl_usart.o(.text.USART_GetInstance) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferGetRxRingBufferLength) refers to fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferStartRingBuffer) refers to fsl_usart.o(.rodata.str1.1) for .L.str.3
    fsl_usart.o(.text.USART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferStartRingBuffer) refers to fsl_usart.o(.text.USART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferStopRingBuffer) refers to fsl_usart.o(.rodata.str1.1) for .L.str.3
    fsl_usart.o(.text.USART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferStopRingBuffer) refers to fsl_usart.o(.text.USART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_Init) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.text.USART_Init) refers to fsl_flexcomm.o(.text.FLEXCOMM_Init) for FLEXCOMM_Init
    fsl_usart.o(.text.USART_Init) refers to fsl_usart.o(.text.USART_SetBaudRate) for USART_SetBaudRate
    fsl_usart.o(.text.USART_Init) refers to fsl_usart.o(.text.USART_EnableContinuousSCLK) for USART_EnableContinuousSCLK
    fsl_usart.o(.ARM.exidx.text.USART_Init) refers to fsl_usart.o(.text.USART_Init) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_SetBaudRate) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_SetBaudRate) refers to fsl_usart.o(.text.USART_SetBaudRate) for [Anonymous Symbol]
    fsl_usart.o(.ARM.exidx.text.USART_EnableContinuousSCLK) refers to fsl_usart.o(.text.USART_EnableContinuousSCLK) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_Deinit) refers to fsl_usart.o(.rodata.str1.1) for .L.str.3
    fsl_usart.o(.text.USART_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_Deinit) refers to fsl_usart.o(.text.USART_Deinit) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_GetDefaultConfig) refers to memseta.o(.text) for memset
    fsl_usart.o(.text.USART_GetDefaultConfig) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_GetDefaultConfig) refers to fsl_usart.o(.text.USART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_WriteBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.8
    fsl_usart.o(.text.USART_WriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_WriteBlocking) refers to fsl_usart.o(.text.USART_WriteBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_ReadBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.8
    fsl_usart.o(.text.USART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_ReadBlocking) refers to fsl_usart.o(.text.USART_ReadBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.text.USART_GetInstance) for USART_GetInstance
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to memseta.o(.text) for memset
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.text.USART_TransferHandleIRQ) for USART_TransferHandleIRQ
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler) for FLEXCOMM_SetIRQHandler
    fsl_usart.o(.text.USART_TransferCreateHandle) refers to fsl_usart.o(.text.EnableIRQ) for EnableIRQ
    fsl_usart.o(.ARM.exidx.text.USART_TransferCreateHandle) refers to fsl_usart.o(.text.USART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferHandleIRQ) refers to fsl_usart.o(.rodata.str1.1) for .L.str.1
    fsl_usart.o(.text.USART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.text.USART_TransferHandleIRQ) refers to fsl_usart.o(.text.USART_TransferIsRxRingBufferFull) for USART_TransferIsRxRingBufferFull
    fsl_usart.o(.ARM.exidx.text.USART_TransferHandleIRQ) refers to fsl_usart.o(.text.USART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_usart.o(.text.EnableIRQ) refers to fsl_usart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_usart.o(.ARM.exidx.text.EnableIRQ) refers to fsl_usart.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferSendNonBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.10
    fsl_usart.o(.text.USART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferSendNonBlocking) refers to fsl_usart.o(.text.USART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferAbortSend) refers to fsl_usart.o(.text.USART_DisableInterrupts) for USART_DisableInterrupts
    fsl_usart.o(.text.USART_TransferAbortSend) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferAbortSend) refers to fsl_usart.o(.text.USART_TransferAbortSend) for [Anonymous Symbol]
    fsl_usart.o(.ARM.exidx.text.USART_DisableInterrupts) refers to fsl_usart.o(.text.USART_DisableInterrupts) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferGetSendCount) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferGetSendCount) refers to fsl_usart.o(.text.USART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.rodata.str1.1) for .L.str.10
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) for USART_TransferGetRxRingBufferLength
    fsl_usart.o(.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_usart.o(.ARM.exidx.text.USART_TransferReceiveNonBlocking) refers to fsl_usart.o(.text.USART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_usart.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_usart.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_usart.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_usart.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferAbortReceive) refers to fsl_usart.o(.text.USART_DisableInterrupts) for USART_DisableInterrupts
    fsl_usart.o(.text.USART_TransferAbortReceive) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferAbortReceive) refers to fsl_usart.o(.text.USART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferGetReceiveCount) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferGetReceiveCount) refers to fsl_usart.o(.text.USART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_usart.o(.text.USART_TransferIsRxRingBufferFull) refers to fsl_usart.o(.text.USART_TransferGetRxRingBufferLength) for USART_TransferGetRxRingBufferLength
    fsl_usart.o(.text.USART_TransferIsRxRingBufferFull) refers to fsl_usart.o(.rodata.str1.1) for .L.str.2
    fsl_usart.o(.text.USART_TransferIsRxRingBufferFull) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_usart.o(.ARM.exidx.text.USART_TransferIsRxRingBufferFull) refers to fsl_usart.o(.text.USART_TransferIsRxRingBufferFull) for [Anonymous Symbol]
    fsl_usart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_usart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_Init) refers to fsl_gint.o(.text.GINT_GetInstance) for GINT_GetInstance
    fsl_gint.o(.text.GINT_Init) refers to fsl_gint.o(.rodata.cst4) for s_gintClocks
    fsl_gint.o(.text.GINT_Init) refers to fsl_gint.o(.bss.s_gintCallback) for s_gintCallback
    fsl_gint.o(.text.GINT_Init) refers to fsl_gint.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_gint.o(.text.GINT_Init) refers to fsl_gint.o(.rodata.cst8) for s_gintResets
    fsl_gint.o(.text.GINT_Init) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_gint.o(.ARM.exidx.text.GINT_Init) refers to fsl_gint.o(.text.GINT_Init) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_GetInstance) refers to fsl_gint.o(.rodata.str1.1) for .L.str.1
    fsl_gint.o(.text.GINT_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gint.o(.ARM.exidx.text.GINT_GetInstance) refers to fsl_gint.o(.text.GINT_GetInstance) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_gint.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_SetCtrl) refers to fsl_gint.o(.text.GINT_GetInstance) for GINT_GetInstance
    fsl_gint.o(.text.GINT_SetCtrl) refers to fsl_gint.o(.bss.s_gintCallback) for s_gintCallback
    fsl_gint.o(.ARM.exidx.text.GINT_SetCtrl) refers to fsl_gint.o(.text.GINT_SetCtrl) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_GetCtrl) refers to fsl_gint.o(.text.GINT_GetInstance) for GINT_GetInstance
    fsl_gint.o(.text.GINT_GetCtrl) refers to fsl_gint.o(.bss.s_gintCallback) for s_gintCallback
    fsl_gint.o(.ARM.exidx.text.GINT_GetCtrl) refers to fsl_gint.o(.text.GINT_GetCtrl) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.GINT_ConfigPins) refers to fsl_gint.o(.text.GINT_ConfigPins) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.GINT_GetConfigPins) refers to fsl_gint.o(.text.GINT_GetConfigPins) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_EnableCallback) refers to fsl_gint.o(.text.GINT_GetInstance) for GINT_GetInstance
    fsl_gint.o(.text.GINT_EnableCallback) refers to fsl_gint.o(.text.GINT_ClrStatus) for GINT_ClrStatus
    fsl_gint.o(.text.GINT_EnableCallback) refers to fsl_gint.o(.rodata.s_gintIRQ) for s_gintIRQ
    fsl_gint.o(.text.GINT_EnableCallback) refers to fsl_gint.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    fsl_gint.o(.text.GINT_EnableCallback) refers to fsl_gint.o(.text.EnableIRQ) for EnableIRQ
    fsl_gint.o(.ARM.exidx.text.GINT_EnableCallback) refers to fsl_gint.o(.text.GINT_EnableCallback) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.GINT_ClrStatus) refers to fsl_gint.o(.text.GINT_ClrStatus) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to fsl_gint.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    fsl_gint.o(.text.EnableIRQ) refers to fsl_gint.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_gint.o(.ARM.exidx.text.EnableIRQ) refers to fsl_gint.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_DisableCallback) refers to fsl_gint.o(.text.GINT_GetInstance) for GINT_GetInstance
    fsl_gint.o(.text.GINT_DisableCallback) refers to fsl_gint.o(.rodata.s_gintIRQ) for s_gintIRQ
    fsl_gint.o(.text.GINT_DisableCallback) refers to fsl_gint.o(.text.DisableIRQ) for DisableIRQ
    fsl_gint.o(.text.GINT_DisableCallback) refers to fsl_gint.o(.text.GINT_ClrStatus) for GINT_ClrStatus
    fsl_gint.o(.text.GINT_DisableCallback) refers to fsl_gint.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    fsl_gint.o(.ARM.exidx.text.GINT_DisableCallback) refers to fsl_gint.o(.text.GINT_DisableCallback) for [Anonymous Symbol]
    fsl_gint.o(.text.DisableIRQ) refers to fsl_gint.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    fsl_gint.o(.ARM.exidx.text.DisableIRQ) refers to fsl_gint.o(.text.DisableIRQ) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_gint.o(.text.GINT_GetInstance) for GINT_GetInstance
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_gint.o(.text.GINT_DisableCallback) for GINT_DisableCallback
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_gint.o(.rodata.cst8) for s_gintResets
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_gint.o(.bss.s_gintCallback) for s_gintCallback
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_gint.o(.rodata.cst4) for s_gintClocks
    fsl_gint.o(.text.GINT_Deinit) refers to fsl_gint.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_gint.o(.ARM.exidx.text.GINT_Deinit) refers to fsl_gint.o(.text.GINT_Deinit) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_gint.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT0_DriverIRQHandler) refers to fsl_gint.o(.bss.s_gintCallback) for s_gintCallback
    fsl_gint.o(.ARM.exidx.text.GINT0_DriverIRQHandler) refers to fsl_gint.o(.text.GINT0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_gint.o(.text.GINT1_DriverIRQHandler) refers to fsl_gint.o(.bss.s_gintCallback) for s_gintCallback
    fsl_gint.o(.ARM.exidx.text.GINT1_DriverIRQHandler) refers to fsl_gint.o(.text.GINT1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_gint.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_gint.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to fsl_gint.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    fsl_inputmux.o(.text.INPUTMUX_Init) refers to fsl_inputmux.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_inputmux.o(.ARM.exidx.text.INPUTMUX_Init) refers to fsl_inputmux.o(.text.INPUTMUX_Init) for [Anonymous Symbol]
    fsl_inputmux.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_inputmux.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_inputmux.o(.ARM.exidx.text.INPUTMUX_AttachSignal) refers to fsl_inputmux.o(.text.INPUTMUX_AttachSignal) for [Anonymous Symbol]
    fsl_inputmux.o(.text.INPUTMUX_Deinit) refers to fsl_inputmux.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_inputmux.o(.ARM.exidx.text.INPUTMUX_Deinit) refers to fsl_inputmux.o(.text.INPUTMUX_Deinit) for [Anonymous Symbol]
    fsl_inputmux.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_inputmux.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_Init) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PINT_Init) refers to fsl_pint.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_pint.o(.text.PINT_Init) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_pint.o(.text.PINT_Init) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_Init) refers to fsl_pint.o(.text.PINT_Init) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_pint.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_PinInterruptConfig) refers to fsl_pint.o(.text.PINT_PinInterruptClrRiseFlag) for PINT_PinInterruptClrRiseFlag
    fsl_pint.o(.text.PINT_PinInterruptConfig) refers to fsl_pint.o(.text.PINT_PinInterruptClrFallFlag) for PINT_PinInterruptClrFallFlag
    fsl_pint.o(.text.PINT_PinInterruptConfig) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PINT_PinInterruptConfig) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_PinInterruptConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptConfig) refers to fsl_pint.o(.text.PINT_PinInterruptConfig) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrRiseFlag) refers to fsl_pint.o(.text.PINT_PinInterruptClrRiseFlag) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrFallFlag) refers to fsl_pint.o(.text.PINT_PinInterruptClrFallFlag) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_PinInterruptGetConfig) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PINT_PinInterruptGetConfig) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_PinInterruptGetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptGetConfig) refers to fsl_pint.o(.text.PINT_PinInterruptGetConfig) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_PatternMatchConfig) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PINT_PatternMatchConfig) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_PatternMatchConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_PatternMatchConfig) refers to fsl_pint.o(.text.PINT_PatternMatchConfig) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_PatternMatchGetConfig) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PINT_PatternMatchGetConfig) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_PatternMatchGetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_PatternMatchGetConfig) refers to fsl_pint.o(.text.PINT_PatternMatchGetConfig) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.PINT_PatternMatchResetDetectLogic) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrStatus) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrStatusAll) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatusAll) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_EnableCallback) refers to fsl_pint.o(.rodata.cst8) for s_pintIRQ
    fsl_pint.o(.text.PINT_EnableCallback) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.text.PINT_EnableCallback) refers to fsl_pint.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    fsl_pint.o(.text.PINT_EnableCallback) refers to fsl_pint.o(.text.EnableIRQ) for EnableIRQ
    fsl_pint.o(.text.PINT_EnableCallback) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_EnableCallback) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_EnableCallback) refers to fsl_pint.o(.text.PINT_EnableCallback) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to fsl_pint.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    fsl_pint.o(.text.EnableIRQ) refers to fsl_pint.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_pint.o(.ARM.exidx.text.EnableIRQ) refers to fsl_pint.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_EnableCallbackByIndex) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.text.PINT_EnableCallbackByIndex) refers to fsl_pint.o(.rodata.cst8) for s_pintIRQ
    fsl_pint.o(.text.PINT_EnableCallbackByIndex) refers to fsl_pint.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    fsl_pint.o(.text.PINT_EnableCallbackByIndex) refers to fsl_pint.o(.text.EnableIRQ) for EnableIRQ
    fsl_pint.o(.text.PINT_EnableCallbackByIndex) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_EnableCallbackByIndex) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_EnableCallbackByIndex) refers to fsl_pint.o(.text.PINT_EnableCallbackByIndex) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_DisableCallback) refers to fsl_pint.o(.rodata.cst8) for s_pintIRQ
    fsl_pint.o(.text.PINT_DisableCallback) refers to fsl_pint.o(.text.DisableIRQ) for DisableIRQ
    fsl_pint.o(.text.PINT_DisableCallback) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.text.PINT_DisableCallback) refers to fsl_pint.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    fsl_pint.o(.text.PINT_DisableCallback) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_DisableCallback) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_DisableCallback) refers to fsl_pint.o(.text.PINT_DisableCallback) for [Anonymous Symbol]
    fsl_pint.o(.text.DisableIRQ) refers to fsl_pint.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    fsl_pint.o(.ARM.exidx.text.DisableIRQ) refers to fsl_pint.o(.text.DisableIRQ) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_DisableCallbackByIndex) refers to fsl_pint.o(.rodata.cst8) for s_pintIRQ
    fsl_pint.o(.text.PINT_DisableCallbackByIndex) refers to fsl_pint.o(.text.DisableIRQ) for DisableIRQ
    fsl_pint.o(.text.PINT_DisableCallbackByIndex) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.text.PINT_DisableCallbackByIndex) refers to fsl_pint.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    fsl_pint.o(.text.PINT_DisableCallbackByIndex) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_DisableCallbackByIndex) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_DisableCallbackByIndex) refers to fsl_pint.o(.text.PINT_DisableCallbackByIndex) for [Anonymous Symbol]
    fsl_pint.o(.text.PINT_Deinit) refers to fsl_pint.o(.text.PINT_DisableCallback) for PINT_DisableCallback
    fsl_pint.o(.text.PINT_Deinit) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PINT_Deinit) refers to fsl_pint.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_pint.o(.text.PINT_Deinit) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    fsl_pint.o(.text.PINT_Deinit) refers to fsl_pint.o(.rodata.str1.1) for .L.str
    fsl_pint.o(.text.PINT_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pint.o(.ARM.exidx.text.PINT_Deinit) refers to fsl_pint.o(.text.PINT_Deinit) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_pint.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT0_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT0_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT0_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT0_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT1_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT1_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT1_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT1_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT2_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT2_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT2_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT2_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT3_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT3_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT3_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT3_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT4_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT4_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT4_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT4_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT5_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT5_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT5_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT5_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT6_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT6_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT6_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT6_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.text.PIN_INT7_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic) for PINT_PatternMatchResetDetectLogic
    fsl_pint.o(.text.PIN_INT7_DriverIRQHandler) refers to fsl_pint.o(.bss.s_pintCallback) for s_pintCallback
    fsl_pint.o(.text.PIN_INT7_DriverIRQHandler) refers to fsl_pint.o(.text.PINT_PinInterruptClrStatus) for PINT_PinInterruptClrStatus
    fsl_pint.o(.ARM.exidx.text.PIN_INT7_DriverIRQHandler) refers to fsl_pint.o(.text.PIN_INT7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_pint.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_pint.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to fsl_pint.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    freertos_hello.o(.text.main) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    freertos_hello.o(.text.main) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    freertos_hello.o(.text.main) refers to clock_config.o(.text.BOARD_BootClockPLL180M) for BOARD_BootClockPLL180M
    freertos_hello.o(.text.main) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    freertos_hello.o(.text.main) refers to fsl_usart.o(.text.USART_GetDefaultConfig) for USART_GetDefaultConfig
    freertos_hello.o(.text.main) refers to fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq) for CLOCK_GetFlexCommClkFreq
    freertos_hello.o(.text.main) refers to fsl_usart.o(.text.USART_Init) for USART_Init
    freertos_hello.o(.text.main) refers to freertos_hello.o(.bss.g_uartHandle) for g_uartHandle
    freertos_hello.o(.text.main) refers to freertos_hello.o(.text.USART_UserCallback) for USART_UserCallback
    freertos_hello.o(.text.main) refers to fsl_usart.o(.text.USART_TransferCreateHandle) for USART_TransferCreateHandle
    freertos_hello.o(.text.main) refers to freertos_hello.o(.data.g_tipString) for g_tipString
    freertos_hello.o(.text.main) refers to freertos_hello.o(.bss.txOnGoing) for txOnGoing
    freertos_hello.o(.text.main) refers to fsl_usart.o(.text.USART_TransferSendNonBlocking) for USART_TransferSendNonBlocking
    freertos_hello.o(.text.main) refers to freertos_hello.o(.bss.g_txBuffer) for g_txBuffer
    freertos_hello.o(.text.main) refers to freertos_hello.o(.bss.g_rxBuffer) for g_rxBuffer
    freertos_hello.o(.text.main) refers to freertos_hello.o(.text.GPIO_Init) for GPIO_Init
    freertos_hello.o(.text.main) refers to freertos_hello.o(.text.GPIO_Interrupt_Init) for GPIO_Interrupt_Init
    freertos_hello.o(.text.main) refers to freertos_hello.o(.text.Task_Create) for Task_Create
    freertos_hello.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_hello.o(.text.main) refers to freertos_hello.o(.bss.rxOnGoing) for rxOnGoing
    freertos_hello.o(.text.main) refers to freertos_hello.o(.data.rxBufferEmpty) for rxBufferEmpty
    freertos_hello.o(.text.main) refers to freertos_hello.o(.bss.txBufferFull) for txBufferFull
    freertos_hello.o(.text.main) refers to fsl_usart.o(.text.USART_TransferReceiveNonBlocking) for USART_TransferReceiveNonBlocking
    freertos_hello.o(.text.main) refers to memcpy.o(.text) for memcpy
    freertos_hello.o(.ARM.exidx.text.main) refers to freertos_hello.o(.text.main) for [Anonymous Symbol]
    freertos_hello.o(.text.USART_UserCallback) refers to freertos_hello.o(.bss.rxOnGoing) for rxOnGoing
    freertos_hello.o(.text.USART_UserCallback) refers to freertos_hello.o(.data.rxBufferEmpty) for rxBufferEmpty
    freertos_hello.o(.text.USART_UserCallback) refers to freertos_hello.o(.bss.txOnGoing) for txOnGoing
    freertos_hello.o(.text.USART_UserCallback) refers to freertos_hello.o(.bss.txBufferFull) for txBufferFull
    freertos_hello.o(.ARM.exidx.text.USART_UserCallback) refers to freertos_hello.o(.text.USART_UserCallback) for [Anonymous Symbol]
    freertos_hello.o(.text.GPIO_Init) refers to fsl_gpio.o(.text.GPIO_PortInit) for GPIO_PortInit
    freertos_hello.o(.text.GPIO_Init) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    freertos_hello.o(.text.GPIO_Init) refers to freertos_hello.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    freertos_hello.o(.ARM.exidx.text.GPIO_Init) refers to freertos_hello.o(.text.GPIO_Init) for [Anonymous Symbol]
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_gint.o(.text.GINT_Init) for GINT_Init
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to freertos_hello.o(.text.gint0_callback) for gint0_callback
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_gint.o(.text.GINT_SetCtrl) for GINT_SetCtrl
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_gint.o(.text.GINT_ConfigPins) for GINT_ConfigPins
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_gint.o(.text.GINT_EnableCallback) for GINT_EnableCallback
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_inputmux.o(.text.INPUTMUX_Init) for INPUTMUX_Init
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_inputmux.o(.text.INPUTMUX_AttachSignal) for INPUTMUX_AttachSignal
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_inputmux.o(.text.INPUTMUX_Deinit) for INPUTMUX_Deinit
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_pint.o(.text.PINT_Init) for PINT_Init
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to freertos_hello.o(.text.PinInt0_Callback) for PinInt0_Callback
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_pint.o(.text.PINT_PinInterruptConfig) for PINT_PinInterruptConfig
    freertos_hello.o(.text.GPIO_Interrupt_Init) refers to fsl_pint.o(.text.PINT_EnableCallbackByIndex) for PINT_EnableCallbackByIndex
    freertos_hello.o(.ARM.exidx.text.GPIO_Interrupt_Init) refers to freertos_hello.o(.text.GPIO_Interrupt_Init) for [Anonymous Symbol]
    freertos_hello.o(.text.Task_Create) refers to freertos_hello.o(.text.tick_task) for tick_task
    freertos_hello.o(.text.Task_Create) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    freertos_hello.o(.text.Task_Create) refers to freertos_hello.o(.text.GPCHAR_task) for GPCHAR_task
    freertos_hello.o(.text.Task_Create) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_hello.o(.ARM.exidx.text.Task_Create) refers to freertos_hello.o(.text.Task_Create) for [Anonymous Symbol]
    freertos_hello.o(.ARM.exidx.text.GPIO_PinWrite) refers to freertos_hello.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    freertos_hello.o(.text.gint0_callback) refers to freertos_hello.o(.text.GPIO_PortRead) for GPIO_PortRead
    freertos_hello.o(.text.gint0_callback) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_hello.o(.text.gint0_callback) refers to freertos_hello.o(.text.GPIO_PortToggle) for GPIO_PortToggle
    freertos_hello.o(.ARM.exidx.text.gint0_callback) refers to freertos_hello.o(.text.gint0_callback) for [Anonymous Symbol]
    freertos_hello.o(.text.PinInt0_Callback) refers to freertos_hello.o(.text.GPIO_PortRead) for GPIO_PortRead
    freertos_hello.o(.text.PinInt0_Callback) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_hello.o(.text.PinInt0_Callback) refers to freertos_hello.o(.text.GPIO_PortToggle) for GPIO_PortToggle
    freertos_hello.o(.ARM.exidx.text.PinInt0_Callback) refers to freertos_hello.o(.text.PinInt0_Callback) for [Anonymous Symbol]
    freertos_hello.o(.text.tick_task) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    freertos_hello.o(.text.tick_task) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_hello.o(.text.tick_task) refers to freertos_hello.o(.text.GPIO_PortToggle) for GPIO_PortToggle
    freertos_hello.o(.text.tick_task) refers to tasks.o(.text.vTaskDelayUntil) for vTaskDelayUntil
    freertos_hello.o(.ARM.exidx.text.tick_task) refers to freertos_hello.o(.text.tick_task) for [Anonymous Symbol]
    freertos_hello.o(.text.GPCHAR_task) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    freertos_hello.o(.text.GPCHAR_task) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for DbgConsole_Getchar
    freertos_hello.o(.text.GPCHAR_task) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for DbgConsole_Putchar
    freertos_hello.o(.ARM.exidx.text.GPCHAR_task) refers to freertos_hello.o(.text.GPCHAR_task) for [Anonymous Symbol]
    freertos_hello.o(.ARM.exidx.text.GPIO_PortRead) refers to freertos_hello.o(.text.GPIO_PortRead) for [Anonymous Symbol]
    freertos_hello.o(.ARM.exidx.text.GPIO_PortToggle) refers to freertos_hello.o(.text.GPIO_PortToggle) for [Anonymous Symbol]
    startup_lpc54608.o(.text) refers to system_lpc54608.o(.text.SystemInit) for SystemInit
    startup_lpc54608.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_lpc54608.o(.text) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_lpc54608.o(.text) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_lpc54608.o(.text) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_lpc54608.o(.text) refers to fsl_gint.o(.text.GINT0_DriverIRQHandler) for GINT0_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_gint.o(.text.GINT1_DriverIRQHandler) for GINT1_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT0_DriverIRQHandler) for PIN_INT0_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT1_DriverIRQHandler) for PIN_INT1_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT2_DriverIRQHandler) for PIN_INT2_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT3_DriverIRQHandler) for PIN_INT3_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) for FLEXCOMM0_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) for FLEXCOMM1_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) for FLEXCOMM2_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) for FLEXCOMM3_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) for FLEXCOMM4_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) for FLEXCOMM5_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) for FLEXCOMM6_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) for FLEXCOMM7_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT4_DriverIRQHandler) for PIN_INT4_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT5_DriverIRQHandler) for PIN_INT5_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT6_DriverIRQHandler) for PIN_INT6_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_pint.o(.text.PIN_INT7_DriverIRQHandler) for PIN_INT7_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) for FLEXCOMM8_DriverIRQHandler
    startup_lpc54608.o(.text) refers to fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler) for FLEXCOMM9_DriverIRQHandler
    startup_lpc54608.o(.isr_vector) refers to startup_lpc54608.o(.text) for Reset_Handler
    startup_lpc54608.o(.isr_vector) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_lpc54608.o(.isr_vector) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_lpc54608.o(.isr_vector) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) refers to serial_manager.o(.text.SerialManager_ReadBlocking) for SerialManager_ReadBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_debug_console.o(.rodata.str1.1) for .L.str
    fsl_debug_console.o(.text.DbgConsole_SendData) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData) refers to fsl_debug_console.o(.text.DbgConsole_SendData) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.rodata.str1.1) for .L.str
    fsl_debug_console.o(.text.DbgConsole_SendDataReliable) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for DbgConsole_ReadOneCharacter
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.rodata.str1.1) for .L.str.1
    fsl_debug_console.o(.text.DbgConsole_ReadLine) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter) for DbgConsole_ReadOneCharacter
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.rodata.str1.1) for .L.str.1
    fsl_debug_console.o(.text.DbgConsole_ReadCharacter) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Init) refers to memseta.o(.text) for memset
    fsl_debug_console.o(.text.DbgConsole_Init) refers to serial_manager.o(.text.SerialManager_Init) for SerialManager_Init
    fsl_debug_console.o(.text.DbgConsole_Init) refers to serial_manager.o(.text.SerialManager_OpenWriteHandle) for SerialManager_OpenWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to serial_manager.o(.text.SerialManager_OpenReadHandle) for SerialManager_OpenReadHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.rodata.str1.1) for .L.str.5
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to serial_manager.o(.text.SerialManager_CloseWriteHandle) for SerialManager_CloseWriteHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to serial_manager.o(.text.SerialManager_CloseReadHandle) for SerialManager_CloseReadHandle
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to serial_manager.o(.text.SerialManager_Deinit) for SerialManager_Deinit
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush) refers to fsl_debug_console.o(.text.DbgConsole_Flush) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to memseta.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_SendDataReliable) for DbgConsole_SendDataReliable
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_ReadLine) for DbgConsole_ReadLine
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to memseta.o(.text) for __aeabi_memclr4
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.bss.g_serialHandle) for g_serialHandle
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintCallback) for DbgConsole_PrintCallback
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for StrFormatPrintf
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.bss.s_debugConsoleState) for s_debugConsoleState
    fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) refers to serial_manager.o(.text.SerialManager_WriteBlocking) for SerialManager_WriteBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf) refers to fsl_debug_console.o(.text.DbgConsole_BlockingPrintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_ReadCharacter) for DbgConsole_ReadCharacter
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.ConvertRadixNumToString) for ConvertRadixNumToString
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString) refers to fsl_str.o(.text.ConvertRadixNumToString) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for ScanIgnoreWhiteSpace
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_setVdLevel) refers to fsl_power_lib.o(.text.POWER_setVdLevel) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterSleep) refers to fsl_power_lib.o(.text.POWER_EnterSleep) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_EnterDeepSleep) refers to memcpy.o(.text) for __aeabi_memcpy4
    fsl_power_lib.o(.text.POWER_EnterDeepSleep) refers to fsl_power_lib.o(.text.DeepSleepReloc) for DeepSleepReloc
    fsl_power_lib.o(.text.POWER_EnterDeepSleep) refers to fsl_power_lib.o(.bss.POWER_EnterDeepSleep.relocMem) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepSleep) refers to fsl_power_lib.o(.text.POWER_EnterDeepSleep) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.DeepSleepReloc) refers to fsl_power_lib.o(.text.DeepSleepReloc) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepPowerDown) refers to fsl_power_lib.o(.text.POWER_EnterDeepPowerDown) for [Anonymous Symbol]
    fsl_power_lib.o(.text.POWER_EnterPowerMode) refers to fsl_power_lib.o(.text.POWER_EnterSleep) for POWER_EnterSleep
    fsl_power_lib.o(.text.POWER_EnterPowerMode) refers to fsl_power_lib.o(.text.POWER_EnterDeepPowerDown) for POWER_EnterDeepPowerDown
    fsl_power_lib.o(.text.POWER_EnterPowerMode) refers to memcpy.o(.text) for __aeabi_memcpy4
    fsl_power_lib.o(.text.POWER_EnterPowerMode) refers to fsl_power_lib.o(.text.DeepSleepReloc) for DeepSleepReloc
    fsl_power_lib.o(.text.POWER_EnterPowerMode) refers to fsl_power_lib.o(.bss.POWER_EnterDeepSleep.relocMem) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_EnterPowerMode) refers to fsl_power_lib.o(.text.POWER_EnterPowerMode) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_SetVoltageForFreq) refers to fsl_power_lib.o(.text.POWER_SetVoltageForFreq) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_SetPLL) refers to fsl_power_lib.o(.text.POWER_SetPLL) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_SetUsbPhy) refers to fsl_power_lib.o(.text.POWER_SetUsbPhy) for [Anonymous Symbol]
    fsl_power_lib.o(.ARM.exidx.text.POWER_GetLibVersion) refers to fsl_power_lib.o(.text.POWER_GetLibVersion) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to freertos_hello.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to freertos_hello.o(.text.main) for main
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (220 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (174 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (280 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (72 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (126 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (70 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.prvInitialiseNewQueue), (32 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (32 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (418 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (430 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (122 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (28 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.text.prvUnlockQueue), (116 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (204 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (192 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (370 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (34 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueEmpty), (24 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (18 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (360 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (168 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (38 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (42 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.vQueueAddToRegistry), (40 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (40 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.text.vQueueWaitForMessageRestricted), (70 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.bss.xQueueRegistry), (64 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (126 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (38 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (84 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (26 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (18 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (286 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (162 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (226 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (68 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (94 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (142 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (160 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (34 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (46 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (154 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (238 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.prvDeleteTCB), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (250 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (142 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (176 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskStartScheduler), (152 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.text.prvIdleTask), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventList), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (94 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventListRestricted), (62 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.text.xTaskRemoveFromEventList), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (62 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.vTaskInternalSetTimeOutState), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.xTaskCheckForTimeOut), (136 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.text.vTaskMissedYield), (14 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetThreadLocalStoragePointer), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.pvTaskGetThreadLocalStoragePointer), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (178 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (198 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (254 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (314 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.text.prvCheckTasksWaitingTermination), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.bss.uxDeletedTasksWaitingCleanUp), (4 bytes).
    Removing tasks.o(.bss.xIdleTaskHandle), (4 bytes).
    Removing tasks.o(.rodata), (28 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.text.xTimerCreateTimerTask), (92 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.text.prvCheckForValidListAndQueue), (104 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.text.prvTimerTask), (22 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (86 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (104 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (42 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.text.prvGetNextExpireTime), (32 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.text.prvProcessTimerOrBlockTask), (128 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.text.prvProcessReceivedCommands), (290 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.text.prvSampleTimeNow), (42 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.text.prvProcessExpiredTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.text.prvSwitchTimerLists), (142 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.text.prvInsertTimerInActiveList), (64 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing timers.o(.bss.xTimerQueue), (4 bytes).
    Removing timers.o(.bss.xTimerTaskHandle), (4 bytes).
    Removing timers.o(.bss.pxCurrentTimerList), (4 bytes).
    Removing timers.o(.bss.pxOverflowTimerList), (4 bytes).
    Removing timers.o(.bss.prvSampleTimeNow.xLastTime), (4 bytes).
    Removing timers.o(.bss.xActiveTimerList1), (20 bytes).
    Removing timers.o(.bss.xActiveTimerList2), (20 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.text.xPortStartScheduler), (282 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.text.vPortSetupTimerInterrupt), (52 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.text.vPortEnableVFP), (20 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.text.prvPortStartFirstTask), (40 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing port.o(.bss.ucMaxSysCallPriority), (1 bytes).
    Removing port.o(.bss.ulMaxPRIGROUPValue), (4 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing board.o(.text.BOARD_InitSDRAM), (168 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitSDRAM), (8 bytes).
    Removing board.o(.text.CLOCK_GetEmcClkFreq), (38 bytes).
    Removing board.o(.ARM.exidx.text.CLOCK_GetEmcClkFreq), (8 bytes).
    Removing board.o(.rodata.ExtClockIn), (4 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.text.BOARD_InitBootClocks), (2 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFRO12M), (76 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO12M), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.POWER_DisablePD), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFROHF48M), (78 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFROHF48M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFROHF96M), (78 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFROHF96M), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockPLL180M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFRO1M), (76 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO1M), (8 bytes).
    Removing clock_config.o(.text.ClocksFunc_1), (146 bytes).
    Removing clock_config.o(.ARM.exidx.text.ClocksFunc_1), (8 bytes).
    Removing clock_config.o(.rodata..L__const.ClocksFunc_1.pllSetup), (28 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.text.BOARD_InitBootPins), (4 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.IOCON_PinMuxSet), (8 bytes).
    Removing generic_list.o(.text), (0 bytes).
    Removing generic_list.o(.text.LIST_Init), (12 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing generic_list.o(.text.LIST_AddTail), (86 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing generic_list.o(.text.DisableGlobalIRQ), (12 bytes).
    Removing generic_list.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing generic_list.o(.text.EnableGlobalIRQ), (6 bytes).
    Removing generic_list.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing generic_list.o(.text.LIST_Scan), (34 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_Scan), (8 bytes).
    Removing generic_list.o(.text.LIST_AddHead), (88 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing generic_list.o(.text.LIST_RemoveHead), (58 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing generic_list.o(.text.LIST_RemoveElement), (78 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing generic_list.o(.text.LIST_AddPrevElement), (106 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing serial_manager.o(.text), (0 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_Init), (8 bytes).
    Removing serial_manager.o(.text.SerialManager_Deinit), (78 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_Deinit), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_OpenWriteHandle), (8 bytes).
    Removing serial_manager.o(.text.SerialManager_CloseWriteHandle), (90 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_CloseWriteHandle), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_OpenReadHandle), (8 bytes).
    Removing serial_manager.o(.text.SerialManager_CloseReadHandle), (148 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_CloseReadHandle), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_WriteBlocking), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_Write), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_ReadBlocking), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_Read), (8 bytes).
    Removing serial_manager.o(.text.SerialManager_EnterLowpower), (44 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_EnterLowpower), (8 bytes).
    Removing serial_manager.o(.text.SerialManager_ExitLowpower), (44 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_ExitLowpower), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_StartWriting), (8 bytes).
    Removing serial_manager.o(.ARM.exidx.text.SerialManager_StartReading), (8 bytes).
    Removing serial_port_uart.o(.text), (0 bytes).
    Removing serial_port_uart.o(.ARM.exidx.text.Serial_UartInit), (8 bytes).
    Removing serial_port_uart.o(.text.Serial_UartDeinit), (34 bytes).
    Removing serial_port_uart.o(.ARM.exidx.text.Serial_UartDeinit), (8 bytes).
    Removing serial_port_uart.o(.ARM.exidx.text.Serial_UartWrite), (8 bytes).
    Removing serial_port_uart.o(.ARM.exidx.text.Serial_UartRead), (8 bytes).
    Removing serial_port_uart.o(.text.Serial_UartEnterLowpower), (42 bytes).
    Removing serial_port_uart.o(.ARM.exidx.text.Serial_UartEnterLowpower), (8 bytes).
    Removing serial_port_uart.o(.text.Serial_UartExitLowpower), (42 bytes).
    Removing serial_port_uart.o(.ARM.exidx.text.Serial_UartExitLowpower), (8 bytes).
    Removing usart_adapter.o(.text), (0 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartGetStatus), (8 bytes).
    Removing usart_adapter.o(.text.HAL_UartDeinit), (50 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing usart_adapter.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing usart_adapter.o(.text.HAL_UartExitLowpower), (32 bytes).
    Removing usart_adapter.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing system_lpc54608.o(.text), (0 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_lpc54608.o(.text.SystemCoreClockUpdate), (254 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_lpc54608.o(.text.getWdtOscFreq), (84 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.getWdtOscFreq), (8 bytes).
    Removing system_lpc54608.o(.text.findPllPreDiv), (28 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.findPllPreDiv), (8 bytes).
    Removing system_lpc54608.o(.text.findPllPostDiv), (34 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.findPllPostDiv), (8 bytes).
    Removing system_lpc54608.o(.text.findPllMMult), (18 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.findPllMMult), (8 bytes).
    Removing system_lpc54608.o(.text.pllDecodeN), (82 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.pllDecodeN), (8 bytes).
    Removing system_lpc54608.o(.text.pllDecodeP), (62 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.pllDecodeP), (8 bytes).
    Removing system_lpc54608.o(.text.pllDecodeM), (86 bytes).
    Removing system_lpc54608.o(.ARM.exidx.text.pllDecodeM), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_AttachClk), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockAttachId), (90 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockAttachId), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetClkDiv), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFROClocking), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.POWER_DisablePD), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockOutClkFreq), (98 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockOutClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetExtClkFreq), (10 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetExtClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetWdtOscFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFroHfFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllOutFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsbPllOutFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPllOutFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPllOutFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPllOutFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetOsc32KFreq), (6 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc32KFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSpifiClkFreq), (74 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSpifiClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAdcClkFreq), (66 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAdcClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsb0ClkFreq), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb0ClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsb1ClkFreq), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsb1ClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMclkClkFreq), (62 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMclkClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSctClkFreq), (66 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSctClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSdioClkFreq), (74 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSdioClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetLcdClkFreq), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetLcdClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetLcdClkIn), (4 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetLcdClkIn), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFro12MFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetI2SMClkFreq), (4 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetI2SMClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAsyncApbClkFreq), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAsyncApbClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAsyncApbClkSrc), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAsyncApbClkSrc), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMCanClkFreq), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMCanClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexCommClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFrgClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFRGInputClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetDmicClkFreq), (72 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetDmicClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFRGClock), (128 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFRGClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreq), (108 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFLASHAccessCyclesForFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFLASHAccessCycles), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSystemPLLInClockRate), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLInClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPLLInClockRate), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLInClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetup), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLOutFromSetup), (8 bytes).
    Removing fsl_clock.o(.text.findPllPreDiv), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.findPllPreDiv), (8 bytes).
    Removing fsl_clock.o(.text.findPllPostDiv), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.findPllPostDiv), (8 bytes).
    Removing fsl_clock.o(.text.findPllMMult), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.findPllMMult), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetup), (66 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPLLOutFromSetup), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetup), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromSetup), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromFractSetup), (184 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromFractSetup), (8 bytes).
    Removing fsl_clock.o(.text.Binary2Fractional), (112 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.Binary2Fractional), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetStoredPLLClockRate), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredPLLClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetStoredAudioPLLClockRate), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredAudioPLLClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetStoredUsbPLLClockRate), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetStoredUsbPLLClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSystemPLLOutClockRate), (54 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLOutClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSystemPLLOutFromSetupUpdate), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystemPLLOutFromSetupUpdate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPLLOutClockRate), (54 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromSetupUpdate), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromSetupUpdate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsbPLLOutClockRate), (84 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPLLOutClockRate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetUsbPLLOutFromSetupUpdate), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetUsbPLLOutFromSetupUpdate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupPLLData), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupPLLData), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPllConfig), (172 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupSystemPLLPrec), (204 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupSystemPLLPrec), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_Enable_SysOsc), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.POWER_EnablePD), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSystemPLLLocked), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupAudioPLLPrec), (192 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupAudioPLLPrec), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsAudioPLLLocked), (16 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsAudioPLLLocked), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupAudioPLLPrecFract), (134 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupAudioPLLPrecFract), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupAudioPLLData), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupAudioPLLData), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPLLFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetAudioPLLFreq), (194 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetAudioPLLFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetUsbPLLFreq), (216 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetUsbPLLFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsUsbPLLLocked), (16 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsUsbPLLLocked), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupSystemPLLMult), (302 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupSystemPLLMult), (8 bytes).
    Removing fsl_clock.o(.text.pllEncodeM), (68 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllEncodeM), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0DeviceClock), (196 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0DeviceClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableClock), (44 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableClock), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0HostClock), (212 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0HostClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0DeviceClock), (212 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0DeviceClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0HostClock), (212 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0HostClock), (8 bytes).
    Removing fsl_clock.o(.text.pllDecodeN), (82 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllDecodeN), (8 bytes).
    Removing fsl_clock.o(.text.pllDecodeP), (62 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllDecodeP), (8 bytes).
    Removing fsl_clock.o(.text.pllDecodeM), (86 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllDecodeM), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPllConfigInternal), (316 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllConfigInternal), (8 bytes).
    Removing fsl_clock.o(.text.FindGreatestCommonDivisor), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.FindGreatestCommonDivisor), (8 bytes).
    Removing fsl_clock.o(.text.pllFindSel), (104 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllFindSel), (8 bytes).
    Removing fsl_clock.o(.text.pllEncodeN), (68 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllEncodeN), (8 bytes).
    Removing fsl_clock.o(.text.pllEncodeP), (60 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.pllEncodeP), (8 bytes).
    Removing fsl_clock.o(.bss.s_Audio_Pll_Freq), (4 bytes).
    Removing fsl_clock.o(.bss.s_Usb_Pll_Freq), (4 bytes).
    Removing fsl_clock.o(.bss.s_FinHzCache), (8 bytes).
    Removing fsl_clock.o(.bss.s_FoutHzCache), (8 bytes).
    Removing fsl_clock.o(.bss.s_PllSetupCacheStruct), (56 bytes).
    Removing fsl_clock.o(.bss.s_PllSetupCacheIdx), (4 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.EnableDeepSleepIRQ), (64 bytes).
    Removing fsl_common.o(.ARM.exidx.text.EnableDeepSleepIRQ), (8 bytes).
    Removing fsl_common.o(.text.EnableIRQ), (12 bytes).
    Removing fsl_common.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_common.o(.text.DisableDeepSleepIRQ), (68 bytes).
    Removing fsl_common.o(.ARM.exidx.text.DisableDeepSleepIRQ), (8 bytes).
    Removing fsl_common.o(.text.DisableIRQ), (12 bytes).
    Removing fsl_common.o(.ARM.exidx.text.DisableIRQ), (8 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (50 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (24 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_common.o(.ARM.exidx.text.DelayLoop), (8 bytes).
    Removing fsl_common.o(.text.__NVIC_EnableIRQ), (32 bytes).
    Removing fsl_common.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_common.o(.text.__NVIC_DisableIRQ), (40 bytes).
    Removing fsl_common.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing fsl_emc.o(.text), (0 bytes).
    Removing fsl_emc.o(.text.EMC_Init), (86 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_Init), (8 bytes).
    Removing fsl_emc.o(.text.CLOCK_EnableClock), (50 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_emc.o(.text.EMC_GetInstance), (88 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_GetInstance), (8 bytes).
    Removing fsl_emc.o(.text.EMC_DynamicMemInit), (660 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_DynamicMemInit), (8 bytes).
    Removing fsl_emc.o(.text.EMC_CalculateTimerCycles), (56 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_CalculateTimerCycles), (8 bytes).
    Removing fsl_emc.o(.text.EMC_ModeOffset), (60 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_ModeOffset), (8 bytes).
    Removing fsl_emc.o(.text.EMC_StaticMemInit), (210 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_StaticMemInit), (8 bytes).
    Removing fsl_emc.o(.text.EMC_Deinit), (26 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.EMC_Deinit), (8 bytes).
    Removing fsl_emc.o(.text.CLOCK_DisableClock), (44 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_emc.o(.text.CLOCK_GetEmcClkFreq), (38 bytes).
    Removing fsl_emc.o(.ARM.exidx.text.CLOCK_GetEmcClkFreq), (8 bytes).
    Removing fsl_emc.o(.rodata.str1.1), (108 bytes).
    Removing fsl_emc.o(.rodata.cst16), (16 bytes).
    Removing fsl_flexcomm.o(.text), (0 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_GetInstance), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_Init), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_SetPeriph), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_SetIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM0_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM1_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM2_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM3_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM4_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM5_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM6_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM7_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM8_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM9_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcomm.o(.ARM.exidx.text.FLEXCOMM_PeripheralIsPresent), (8 bytes).
    Removing fsl_flexcomm.o(.rodata.kFlexcommIrqs), (10 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortInit), (8 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_power.o(.text), (0 bytes).
    Removing fsl_reset.o(.text), (0 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_SetPeripheralReset), (8 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_ClearPeripheralReset), (8 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_PeripheralReset), (8 bytes).
    Removing fsl_usart.o(.text), (0 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_GetInstance), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferStartRingBuffer), (112 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferStopRingBuffer), (74 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_SetBaudRate), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_EnableContinuousSCLK), (8 bytes).
    Removing fsl_usart.o(.text.USART_Deinit), (62 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_Deinit), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_GetDefaultConfig), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_WriteBlocking), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_ReadBlocking), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferCreateHandle), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferHandleIRQ), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferAbortSend), (60 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferAbortSend), (8 bytes).
    Removing fsl_usart.o(.text.USART_DisableInterrupts), (10 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_DisableInterrupts), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferGetSendCount), (76 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferGetSendCount), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferAbortReceive), (68 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferAbortReceive), (8 bytes).
    Removing fsl_usart.o(.text.USART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.USART_TransferIsRxRingBufferFull), (8 bytes).
    Removing fsl_usart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_gint.o(.text), (0 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_Init), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_GetInstance), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_SetCtrl), (8 bytes).
    Removing fsl_gint.o(.text.GINT_GetCtrl), (50 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_GetCtrl), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_ConfigPins), (8 bytes).
    Removing fsl_gint.o(.text.GINT_GetConfigPins), (14 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_GetConfigPins), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_EnableCallback), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_ClrStatus), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_gint.o(.text.GINT_DisableCallback), (40 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_DisableCallback), (8 bytes).
    Removing fsl_gint.o(.text.DisableIRQ), (12 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.DisableIRQ), (8 bytes).
    Removing fsl_gint.o(.text.GINT_Deinit), (66 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT_Deinit), (8 bytes).
    Removing fsl_gint.o(.text.CLOCK_DisableClock), (44 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT0_DriverIRQHandler), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.GINT1_DriverIRQHandler), (8 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_gint.o(.text.__NVIC_DisableIRQ), (40 bytes).
    Removing fsl_gint.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing fsl_inputmux.o(.text), (0 bytes).
    Removing fsl_inputmux.o(.ARM.exidx.text.INPUTMUX_Init), (8 bytes).
    Removing fsl_inputmux.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_inputmux.o(.ARM.exidx.text.INPUTMUX_AttachSignal), (8 bytes).
    Removing fsl_inputmux.o(.ARM.exidx.text.INPUTMUX_Deinit), (8 bytes).
    Removing fsl_inputmux.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_pint.o(.text), (0 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_Init), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptConfig), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrRiseFlag), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrFallFlag), (8 bytes).
    Removing fsl_pint.o(.text.PINT_PinInterruptGetConfig), (110 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptGetConfig), (8 bytes).
    Removing fsl_pint.o(.text.PINT_PatternMatchConfig), (122 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PatternMatchConfig), (8 bytes).
    Removing fsl_pint.o(.text.PINT_PatternMatchGetConfig), (112 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PatternMatchGetConfig), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PatternMatchResetDetectLogic), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrStatus), (8 bytes).
    Removing fsl_pint.o(.text.PINT_PinInterruptClrStatusAll), (50 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_PinInterruptClrStatusAll), (8 bytes).
    Removing fsl_pint.o(.text.PINT_EnableCallback), (76 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_EnableCallback), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_EnableCallbackByIndex), (8 bytes).
    Removing fsl_pint.o(.text.PINT_DisableCallback), (76 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_DisableCallback), (8 bytes).
    Removing fsl_pint.o(.text.DisableIRQ), (12 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.DisableIRQ), (8 bytes).
    Removing fsl_pint.o(.text.PINT_DisableCallbackByIndex), (66 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_DisableCallbackByIndex), (8 bytes).
    Removing fsl_pint.o(.text.PINT_Deinit), (88 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PINT_Deinit), (8 bytes).
    Removing fsl_pint.o(.text.CLOCK_DisableClock), (16 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT0_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT1_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT2_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT3_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT4_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT5_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT6_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.PIN_INT7_DriverIRQHandler), (8 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_pint.o(.text.__NVIC_DisableIRQ), (40 bytes).
    Removing fsl_pint.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing freertos_hello.o(.text), (0 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.main), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.USART_UserCallback), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.GPIO_Interrupt_Init), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.Task_Create), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.gint0_callback), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.PinInt0_Callback), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.tick_task), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.GPCHAR_task), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.GPIO_PortRead), (8 bytes).
    Removing freertos_hello.o(.ARM.exidx.text.GPIO_PortToggle), (8 bytes).
    Removing freertos_hello.o(.data.txbuff), (67 bytes).
    Removing freertos_hello.o(.bss.rxbuff), (20 bytes).
    Removing freertos_hello.o(.ARM.use_no_argv), (4 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadOneCharacter), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_SendData), (88 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendData), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_SendDataReliable), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ReadLine), (124 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadLine), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ReadCharacter), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (66 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Flush), (4 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Flush), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintCallback), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (60 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_BlockingPrintf), (98 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_BlockingPrintf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (930 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_str.o(.text.ScanIgnoreWhiteSpace), (36 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace), (8 bytes).
    Removing fsl_power_lib.o(.text), (0 bytes).
    Removing fsl_power_lib.o(.text.POWER_setVdLevel), (16 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_setVdLevel), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterSleep), (32 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterSleep), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterDeepSleep), (48 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepSleep), (8 bytes).
    Removing fsl_power_lib.o(.text.DeepSleepReloc), (540 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.DeepSleepReloc), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterDeepPowerDown), (64 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterDeepPowerDown), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_EnterPowerMode), (84 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_EnterPowerMode), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_SetVoltageForFreq), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_SetPLL), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_SetUsbPhy), (28 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_SetUsbPhy), (8 bytes).
    Removing fsl_power_lib.o(.text.POWER_GetLibVersion), (8 bytes).
    Removing fsl_power_lib.o(.ARM.exidx.text.POWER_GetLibVersion), (8 bytes).
    Removing fsl_power_lib.o(.bss.POWER_EnterDeepSleep.relocMem), (2048 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfltui.o(.text), (26 bytes).
    Removing dfixui.o(.text), (50 bytes).
    Removing depilogue.o(.text), (186 bytes).

892 unused section(s) (total 34530 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_hello.c                         0x00000000   Number         0  freertos_hello.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_emc.c                                0x00000000   Number         0  fsl_emc.o ABSOLUTE
    fsl_flexcomm.c                           0x00000000   Number         0  fsl_flexcomm.o ABSOLUTE
    fsl_gint.c                               0x00000000   Number         0  fsl_gint.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_inputmux.c                           0x00000000   Number         0  fsl_inputmux.o ABSOLUTE
    fsl_pint.c                               0x00000000   Number         0  fsl_pint.o ABSOLUTE
    fsl_power.c                              0x00000000   Number         0  fsl_power.o ABSOLUTE
    fsl_power_lib.c                          0x00000000   Number         0  fsl_power_lib.o ABSOLUTE
    fsl_reset.c                              0x00000000   Number         0  fsl_reset.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    fsl_usart.c                              0x00000000   Number         0  fsl_usart.o ABSOLUTE
    generic_list.c                           0x00000000   Number         0  generic_list.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    serial_manager.c                         0x00000000   Number         0  serial_manager.o ABSOLUTE
    serial_port_uart.c                       0x00000000   Number         0  serial_port_uart.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_LPC54608.c                        0x00000000   Number         0  system_lpc54608.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    usart_adapter.c                          0x00000000   Number         0  usart_adapter.o ABSOLUTE
    [Anonymous Symbol]                       0x00000000   Section        0  startup_lpc54608.o(.isr_vector)
    .ARM.Collect$$$$00000000                 0x00000400   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x00000400   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x00000404   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000408   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000408   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000408   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000410   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x00000410   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000410   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x00000410   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x00000414   Section        0  startup_lpc54608.o(.text)
    .text                                    0x00000644   Section        0  uldiv.o(.text)
    .text                                    0x000006a6   Section        0  memcpy.o(.text)
    .text                                    0x000006ce   Section        0  memseta.o(.text)
    .text                                    0x000006f2   Section        0  strlen.o(.text)
    .text                                    0x00000700   Section        0  llshl.o(.text)
    .text                                    0x0000071e   Section        0  llushr.o(.text)
    .text                                    0x00000740   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x00000764   Section        0  clock_config.o(.text.BOARD_BootClockPLL180M)
    [Anonymous Symbol]                       0x00000828   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x00000884   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x0000089c   Section        0  fsl_clock.o(.text.CLOCK_AttachClk)
    CLOCK_DisableClock                       0x000008fd   Thumb Code    16  fsl_inputmux.o(.text.CLOCK_DisableClock)
    [Anonymous Symbol]                       0x000008fc   Section        0  fsl_inputmux.o(.text.CLOCK_DisableClock)
    CLOCK_EnableClock                        0x0000090d   Thumb Code    16  pin_mux.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x0000090c   Section        0  pin_mux.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x0000091d   Thumb Code    50  fsl_flexcomm.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x0000091c   Section        0  fsl_flexcomm.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x00000951   Thumb Code    50  fsl_gpio.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x00000950   Section        0  fsl_gpio.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x00000985   Thumb Code    50  fsl_gint.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x00000984   Section        0  fsl_gint.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x000009b9   Thumb Code    16  fsl_inputmux.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000009b8   Section        0  fsl_inputmux.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x000009c9   Thumb Code    16  fsl_pint.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x000009c8   Section        0  fsl_pint.o(.text.CLOCK_EnableClock)
    CLOCK_Enable_SysOsc                      0x000009d9   Thumb Code    26  fsl_clock.o(.text.CLOCK_Enable_SysOsc)
    [Anonymous Symbol]                       0x000009d8   Section        0  fsl_clock.o(.text.CLOCK_Enable_SysOsc)
    [Anonymous Symbol]                       0x000009f4   Section        0  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    [Anonymous Symbol]                       0x00000a4c   Section        0  fsl_clock.o(.text.CLOCK_GetFRGInputClock)
    [Anonymous Symbol]                       0x00000a78   Section        0  fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq)
    [Anonymous Symbol]                       0x00000ac4   Section        0  fsl_clock.o(.text.CLOCK_GetFrgClkFreq)
    [Anonymous Symbol]                       0x00000af8   Section        0  fsl_clock.o(.text.CLOCK_GetFro12MFreq)
    [Anonymous Symbol]                       0x00000b14   Section        0  fsl_clock.o(.text.CLOCK_GetFroHfFreq)
    [Anonymous Symbol]                       0x00000b48   Section        0  fsl_clock.o(.text.CLOCK_GetPllOutFreq)
    [Anonymous Symbol]                       0x00000b54   Section        0  fsl_clock.o(.text.CLOCK_GetWdtOscFreq)
    wdtFreqLookup                            0x00000b88   Number         0  fsl_clock.o(.text.CLOCK_GetWdtOscFreq)
    CLOCK_IsSystemPLLLocked                  0x00000ba9   Thumb Code    16  fsl_clock.o(.text.CLOCK_IsSystemPLLLocked)
    [Anonymous Symbol]                       0x00000ba8   Section        0  fsl_clock.o(.text.CLOCK_IsSystemPLLLocked)
    [Anonymous Symbol]                       0x00000bb8   Section        0  fsl_clock.o(.text.CLOCK_SetClkDiv)
    CLOCK_SetFLASHAccessCycles               0x00000bdd   Thumb Code    22  fsl_clock.o(.text.CLOCK_SetFLASHAccessCycles)
    [Anonymous Symbol]                       0x00000bdc   Section        0  fsl_clock.o(.text.CLOCK_SetFLASHAccessCycles)
    [Anonymous Symbol]                       0x00000bf4   Section        0  fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq)
    [Anonymous Symbol]                       0x00000c88   Section        0  fsl_clock.o(.text.CLOCK_SetPLLFreq)
    [Anonymous Symbol]                       0x00000d40   Section        0  fsl_clock.o(.text.CLOCK_SetupFROClocking)
    ConvertRadixNumToString                  0x00000dc5   Thumb Code   122  fsl_str.o(.text.ConvertRadixNumToString)
    [Anonymous Symbol]                       0x00000dc4   Section        0  fsl_str.o(.text.ConvertRadixNumToString)
    [Anonymous Symbol]                       0x00000e40   Section        0  fsl_debug_console.o(.text.DbgConsole_Getchar)
    [Anonymous Symbol]                       0x00000e5c   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_PrintCallback                 0x00000f1d   Thumb Code    68  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x00000f1c   Section        0  fsl_debug_console.o(.text.DbgConsole_PrintCallback)
    [Anonymous Symbol]                       0x00000f60   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x00000fac   Section        0  fsl_debug_console.o(.text.DbgConsole_Putchar)
    [Anonymous Symbol]                       0x00000fc0   Section        0  fsl_debug_console.o(.text.DbgConsole_ReadCharacter)
    [Anonymous Symbol]                       0x00000ff8   Section        0  fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter)
    [Anonymous Symbol]                       0x00001014   Section        0  fsl_debug_console.o(.text.DbgConsole_SendDataReliable)
    DelayLoop                                0x00001081   Thumb Code    10  fsl_common.o(.text.DelayLoop)
    [Anonymous Symbol]                       0x00001080   Section        0  fsl_common.o(.text.DelayLoop)
    loop                                     0x00001082   Number         0  fsl_common.o(.text.DelayLoop)
    DisableGlobalIRQ                         0x0000108d   Thumb Code    12  serial_manager.o(.text.DisableGlobalIRQ)
    [Anonymous Symbol]                       0x0000108c   Section        0  serial_manager.o(.text.DisableGlobalIRQ)
    DisableGlobalIRQ                         0x00001099   Thumb Code    12  fsl_usart.o(.text.DisableGlobalIRQ)
    [Anonymous Symbol]                       0x00001098   Section        0  fsl_usart.o(.text.DisableGlobalIRQ)
    EnableGlobalIRQ                          0x000010a5   Thumb Code     6  serial_manager.o(.text.EnableGlobalIRQ)
    [Anonymous Symbol]                       0x000010a4   Section        0  serial_manager.o(.text.EnableGlobalIRQ)
    EnableGlobalIRQ                          0x000010ad   Thumb Code     6  fsl_usart.o(.text.EnableGlobalIRQ)
    [Anonymous Symbol]                       0x000010ac   Section        0  fsl_usart.o(.text.EnableGlobalIRQ)
    EnableIRQ                                0x000010b5   Thumb Code    12  fsl_usart.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x000010b4   Section        0  fsl_usart.o(.text.EnableIRQ)
    EnableIRQ                                0x000010c1   Thumb Code    12  fsl_gint.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x000010c0   Section        0  fsl_gint.o(.text.EnableIRQ)
    EnableIRQ                                0x000010cd   Thumb Code    12  fsl_pint.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x000010cc   Section        0  fsl_pint.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x000010d8   Section        0  fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001128   Section        0  fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001178   Section        0  fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler)
    [Anonymous Symbol]                       0x000011c8   Section        0  fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001218   Section        0  fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001268   Section        0  fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler)
    [Anonymous Symbol]                       0x000012b8   Section        0  fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler)
    [Anonymous Symbol]                       0x0000130c   Section        0  fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001360   Section        0  fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler)
    [Anonymous Symbol]                       0x000013b4   Section        0  fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001408   Section        0  fsl_flexcomm.o(.text.FLEXCOMM_GetInstance)
    s_flexcommBaseAddrs                      0x00001430   Number         0  fsl_flexcomm.o(.text.FLEXCOMM_GetInstance)
    [Anonymous Symbol]                       0x0000147c   Section        0  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    s_flexcommClocks                         0x000014a8   Number         0  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    s_flexcommResets                         0x000014bc   Number         0  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    FLEXCOMM_PeripheralIsPresent             0x000014e5   Thumb Code    40  fsl_flexcomm.o(.text.FLEXCOMM_PeripheralIsPresent)
    [Anonymous Symbol]                       0x000014e4   Section        0  fsl_flexcomm.o(.text.FLEXCOMM_PeripheralIsPresent)
    [Anonymous Symbol]                       0x0000150c   Section        0  fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler)
    FLEXCOMM_SetPeriph                       0x00001535   Thumb Code    50  fsl_flexcomm.o(.text.FLEXCOMM_SetPeriph)
    [Anonymous Symbol]                       0x00001534   Section        0  fsl_flexcomm.o(.text.FLEXCOMM_SetPeriph)
    [Anonymous Symbol]                       0x00001568   Section        0  fsl_gint.o(.text.GINT0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001590   Section        0  fsl_gint.o(.text.GINT1_DriverIRQHandler)
    GINT_ClrStatus                           0x000015b9   Thumb Code    10  fsl_gint.o(.text.GINT_ClrStatus)
    [Anonymous Symbol]                       0x000015b8   Section        0  fsl_gint.o(.text.GINT_ClrStatus)
    [Anonymous Symbol]                       0x000015c4   Section        0  fsl_gint.o(.text.GINT_ConfigPins)
    [Anonymous Symbol]                       0x000015d0   Section        0  fsl_gint.o(.text.GINT_EnableCallback)
    GINT_GetInstance                         0x000015fd   Thumb Code    84  fsl_gint.o(.text.GINT_GetInstance)
    [Anonymous Symbol]                       0x000015fc   Section        0  fsl_gint.o(.text.GINT_GetInstance)
    s_gintBases                              0x00001624   Number         0  fsl_gint.o(.text.GINT_GetInstance)
    [Anonymous Symbol]                       0x00001650   Section        0  fsl_gint.o(.text.GINT_Init)
    [Anonymous Symbol]                       0x0000168c   Section        0  fsl_gint.o(.text.GINT_SetCtrl)
    GPCHAR_task                              0x000016b9   Thumb Code    36  freertos_hello.o(.text.GPCHAR_task)
    [Anonymous Symbol]                       0x000016b8   Section        0  freertos_hello.o(.text.GPCHAR_task)
    [Anonymous Symbol]                       0x000016dc   Section        0  freertos_hello.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x0000174c   Section        0  freertos_hello.o(.text.GPIO_Interrupt_Init)
    [Anonymous Symbol]                       0x000017cc   Section        0  fsl_gpio.o(.text.GPIO_PinInit)
    GPIO_PinWrite                            0x0000181d   Thumb Code    18  freertos_hello.o(.text.GPIO_PinWrite)
    [Anonymous Symbol]                       0x0000181c   Section        0  freertos_hello.o(.text.GPIO_PinWrite)
    [Anonymous Symbol]                       0x00001830   Section        0  fsl_gpio.o(.text.GPIO_PortInit)
    s_gpioClockName                          0x00001894   Number         0  fsl_gpio.o(.text.GPIO_PortInit)
    s_gpioResets                             0x000018a0   Number         0  fsl_gpio.o(.text.GPIO_PortInit)
    GPIO_PortRead                            0x000018b9   Thumb Code    12  freertos_hello.o(.text.GPIO_PortRead)
    [Anonymous Symbol]                       0x000018b8   Section        0  freertos_hello.o(.text.GPIO_PortRead)
    GPIO_PortToggle                          0x000018c5   Thumb Code    12  freertos_hello.o(.text.GPIO_PortToggle)
    [Anonymous Symbol]                       0x000018c4   Section        0  freertos_hello.o(.text.GPIO_PortToggle)
    HAL_UartGetStatus                        0x000018d1   Thumb Code    10  usart_adapter.o(.text.HAL_UartGetStatus)
    [Anonymous Symbol]                       0x000018d0   Section        0  usart_adapter.o(.text.HAL_UartGetStatus)
    [Anonymous Symbol]                       0x000018dc   Section        0  usart_adapter.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x000019ac   Section        0  usart_adapter.o(.text.HAL_UartReceiveBlocking)
    [Anonymous Symbol]                       0x00001a18   Section        0  usart_adapter.o(.text.HAL_UartSendBlocking)
    [Anonymous Symbol]                       0x00001a80   Section        0  fsl_inputmux.o(.text.INPUTMUX_AttachSignal)
    [Anonymous Symbol]                       0x00001a90   Section        0  fsl_inputmux.o(.text.INPUTMUX_Deinit)
    [Anonymous Symbol]                       0x00001a94   Section        0  fsl_inputmux.o(.text.INPUTMUX_Init)
    IOCON_PinMuxSet                          0x00001a99   Thumb Code    18  pin_mux.o(.text.IOCON_PinMuxSet)
    [Anonymous Symbol]                       0x00001a98   Section        0  pin_mux.o(.text.IOCON_PinMuxSet)
    [Anonymous Symbol]                       0x00001aac   Section        0  fsl_pint.o(.text.PINT_EnableCallbackByIndex)
    [Anonymous Symbol]                       0x00001ae8   Section        0  fsl_pint.o(.text.PINT_Init)
    [Anonymous Symbol]                       0x00001b54   Section        0  fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic)
    PINT_PinInterruptClrFallFlag             0x00001b6d   Thumb Code    10  fsl_pint.o(.text.PINT_PinInterruptClrFallFlag)
    [Anonymous Symbol]                       0x00001b6c   Section        0  fsl_pint.o(.text.PINT_PinInterruptClrFallFlag)
    PINT_PinInterruptClrRiseFlag             0x00001b79   Thumb Code    10  fsl_pint.o(.text.PINT_PinInterruptClrRiseFlag)
    [Anonymous Symbol]                       0x00001b78   Section        0  fsl_pint.o(.text.PINT_PinInterruptClrRiseFlag)
    [Anonymous Symbol]                       0x00001b84   Section        0  fsl_pint.o(.text.PINT_PinInterruptClrStatus)
    [Anonymous Symbol]                       0x00001b9c   Section        0  fsl_pint.o(.text.PINT_PinInterruptConfig)
    [Anonymous Symbol]                       0x00001c08   Section        0  fsl_pint.o(.text.PIN_INT0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001c40   Section        0  fsl_pint.o(.text.PIN_INT1_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001c78   Section        0  fsl_pint.o(.text.PIN_INT2_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001cb0   Section        0  fsl_pint.o(.text.PIN_INT3_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001ce8   Section        0  fsl_pint.o(.text.PIN_INT4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d20   Section        0  fsl_pint.o(.text.PIN_INT5_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d58   Section        0  fsl_pint.o(.text.PIN_INT6_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d90   Section        0  fsl_pint.o(.text.PIN_INT7_DriverIRQHandler)
    POWER_DisablePD                          0x00001dc9   Thumb Code    24  clock_config.o(.text.POWER_DisablePD)
    [Anonymous Symbol]                       0x00001dc8   Section        0  clock_config.o(.text.POWER_DisablePD)
    POWER_DisablePD                          0x00001de1   Thumb Code    24  fsl_clock.o(.text.POWER_DisablePD)
    [Anonymous Symbol]                       0x00001de0   Section        0  fsl_clock.o(.text.POWER_DisablePD)
    POWER_EnablePD                           0x00001df9   Thumb Code    24  fsl_clock.o(.text.POWER_EnablePD)
    [Anonymous Symbol]                       0x00001df8   Section        0  fsl_clock.o(.text.POWER_EnablePD)
    [Anonymous Symbol]                       0x00001e10   Section        0  fsl_power_lib.o(.text.POWER_SetPLL)
    __arm_cp.7_0                             0x00001e24   Number         4  fsl_power_lib.o(.text.POWER_SetPLL)
    __arm_cp.7_1                             0x00001e28   Number         4  fsl_power_lib.o(.text.POWER_SetPLL)
    [Anonymous Symbol]                       0x00001e2c   Section        0  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    __arm_cp.6_0                             0x00001e54   Number         4  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    __arm_cp.6_1                             0x00001e58   Number         4  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    __arm_cp.6_2                             0x00001e5c   Number         4  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    [Anonymous Symbol]                       0x00001e60   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00001ec0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00001ec4   Section        0  freertos_hello.o(.text.PinInt0_Callback)
    [Anonymous Symbol]                       0x00001f04   Section        0  fsl_reset.o(.text.RESET_ClearPeripheralReset)
    [Anonymous Symbol]                       0x00001f60   Section        0  fsl_reset.o(.text.RESET_PeripheralReset)
    [Anonymous Symbol]                       0x00001f74   Section        0  fsl_reset.o(.text.RESET_SetPeripheralReset)
    [Anonymous Symbol]                       0x00001fc8   Section        0  fsl_common.o(.text.SDK_DelayAtLeastUs)
    [Anonymous Symbol]                       0x00002040   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00002060   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00002064   Section        0  serial_manager.o(.text.SerialManager_Init)
    [Anonymous Symbol]                       0x000020c8   Section        0  serial_manager.o(.text.SerialManager_OpenReadHandle)
    [Anonymous Symbol]                       0x00002130   Section        0  serial_manager.o(.text.SerialManager_OpenWriteHandle)
    SerialManager_Read                       0x00002189   Thumb Code   122  serial_manager.o(.text.SerialManager_Read)
    [Anonymous Symbol]                       0x00002188   Section        0  serial_manager.o(.text.SerialManager_Read)
    [Anonymous Symbol]                       0x00002204   Section        0  serial_manager.o(.text.SerialManager_ReadBlocking)
    SerialManager_StartReading               0x00002209   Thumb Code    24  serial_manager.o(.text.SerialManager_StartReading)
    [Anonymous Symbol]                       0x00002208   Section        0  serial_manager.o(.text.SerialManager_StartReading)
    SerialManager_StartWriting               0x00002221   Thumb Code    24  serial_manager.o(.text.SerialManager_StartWriting)
    [Anonymous Symbol]                       0x00002220   Section        0  serial_manager.o(.text.SerialManager_StartWriting)
    SerialManager_Write                      0x00002239   Thumb Code   122  serial_manager.o(.text.SerialManager_Write)
    [Anonymous Symbol]                       0x00002238   Section        0  serial_manager.o(.text.SerialManager_Write)
    [Anonymous Symbol]                       0x000022b4   Section        0  serial_manager.o(.text.SerialManager_WriteBlocking)
    [Anonymous Symbol]                       0x000022b8   Section        0  serial_port_uart.o(.text.Serial_UartInit)
    [Anonymous Symbol]                       0x00002324   Section        0  serial_port_uart.o(.text.Serial_UartRead)
    [Anonymous Symbol]                       0x00002378   Section        0  serial_port_uart.o(.text.Serial_UartWrite)
    [Anonymous Symbol]                       0x000023cc   Section        0  fsl_str.o(.text.StrFormatPrintf)
    [Anonymous Symbol]                       0x000025f8   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00002628   Section        0  system_lpc54608.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0000265c   Section        0  system_lpc54608.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x00002660   Section        0  freertos_hello.o(.text.Task_Create)
    USART_EnableContinuousSCLK               0x0000270d   Thumb Code    18  fsl_usart.o(.text.USART_EnableContinuousSCLK)
    [Anonymous Symbol]                       0x0000270c   Section        0  fsl_usart.o(.text.USART_EnableContinuousSCLK)
    [Anonymous Symbol]                       0x00002720   Section        0  fsl_usart.o(.text.USART_GetDefaultConfig)
    [Anonymous Symbol]                       0x00002764   Section        0  fsl_usart.o(.text.USART_GetInstance)
    s_usartBaseAddrs                         0x0000278c   Number         0  fsl_usart.o(.text.USART_GetInstance)
    [Anonymous Symbol]                       0x000027d4   Section        0  fsl_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x0000291c   Section        0  fsl_usart.o(.text.USART_ReadBlocking)
    [Anonymous Symbol]                       0x000029c8   Section        0  fsl_usart.o(.text.USART_SetBaudRate)
    [Anonymous Symbol]                       0x00002ac0   Section        0  fsl_usart.o(.text.USART_TransferCreateHandle)
    s_usartIRQ                               0x00002b44   Number         0  fsl_usart.o(.text.USART_TransferCreateHandle)
    [Anonymous Symbol]                       0x00002b78   Section        0  fsl_usart.o(.text.USART_TransferGetRxRingBufferLength)
    [Anonymous Symbol]                       0x00002ba0   Section        0  fsl_usart.o(.text.USART_TransferHandleIRQ)
    USART_TransferIsRxRingBufferFull         0x00002de9   Thumb Code    46  fsl_usart.o(.text.USART_TransferIsRxRingBufferFull)
    [Anonymous Symbol]                       0x00002de8   Section        0  fsl_usart.o(.text.USART_TransferIsRxRingBufferFull)
    [Anonymous Symbol]                       0x00002e18   Section        0  fsl_usart.o(.text.USART_TransferReceiveNonBlocking)
    [Anonymous Symbol]                       0x00002f3c   Section        0  fsl_usart.o(.text.USART_TransferSendNonBlocking)
    [Anonymous Symbol]                       0x00002fb4   Section        0  freertos_hello.o(.text.USART_UserCallback)
    [Anonymous Symbol]                       0x00002ff0   Section        0  fsl_usart.o(.text.USART_WriteBlocking)
    __NVIC_ClearPendingIRQ                   0x00003039   Thumb Code    32  fsl_gint.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x00003038   Section        0  fsl_gint.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x00003059   Thumb Code    32  fsl_pint.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x00003058   Section        0  fsl_pint.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x00003079   Thumb Code    32  fsl_usart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00003078   Section        0  fsl_usart.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00003099   Thumb Code    32  fsl_gint.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00003098   Section        0  fsl_gint.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x000030b9   Thumb Code    32  fsl_pint.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x000030b8   Section        0  fsl_pint.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x000030d8   Section        0  fsl_assert.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x00003114   Section        0  freertos_hello.o(.text.gint0_callback)
    [Anonymous Symbol]                       0x00003154   Section        0  freertos_hello.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000032a5   Thumb Code   164  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000032a4   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00003349   Thumb Code   174  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00003348   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvHeapInit                              0x000033f9   Thumb Code   118  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x000033f8   Section        0  heap_4.o(.text.prvHeapInit)
    prvInitialiseNewTask                     0x00003471   Thumb Code   176  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00003470   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00003521   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00003520   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x00003591   Thumb Code    98  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x00003590   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvResetNextTaskUnblockTime              0x000035f5   Thumb Code    40  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000035f4   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x0000361d   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0000361c   Section        0  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00003650   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x0000377c   Section        0  port.o(.text.pxPortInitialiseStack)
    tick_task                                0x000037a5   Thumb Code    60  freertos_hello.o(.text.tick_task)
    [Anonymous Symbol]                       0x000037a4   Section        0  freertos_hello.o(.text.tick_task)
    [Anonymous Symbol]                       0x000037e0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00003808   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00003820   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00003828   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00003864   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x00003880   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000038c8   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000038f8   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00003978   Section        0  tasks.o(.text.vTaskDelayUntil)
    [Anonymous Symbol]                       0x00003a20   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x00003a30   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00003ab8   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003b10   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003b1c   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00003c68   Section        0  tasks.o(.text.xTaskResumeAll)
    i.__scatterload_copy                     0x00003d80   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00003d8e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00003d90   Section       14  handlers.o(i.__scatterload_zeroinit)
    .L__const.BOARD_BootClockPLL180M.pllSetup 0x00003da0   Data          28  clock_config.o(.rodata..L__const.BOARD_BootClockPLL180M.pllSetup)
    s_gintClocks                             0x00003dbc   Data           4  fsl_gint.o(.rodata.cst4)
    s_gintResets                             0x00003dc0   Data           8  fsl_gint.o(.rodata.cst8)
    s_pintIRQ                                0x00003dc8   Data           8  fsl_pint.o(.rodata.cst8)
    s_UsartAdapterBase                       0x00003dd0   Data          40  usart_adapter.o(.rodata.s_UsartAdapterBase)
    [Anonymous Symbol]                       0x00003dd0   Section        0  usart_adapter.o(.rodata.s_UsartAdapterBase)
    s_gintIRQ                                0x00003df8   Data           2  fsl_gint.o(.rodata.s_gintIRQ)
    [Anonymous Symbol]                       0x00003df8   Section        0  fsl_gint.o(.rodata.s_gintIRQ)
    .L.str.1                                 0x00003dfa   Data          14  board.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003dfa   Section        0  board.o(.rodata.str1.1)
    .L.str.1                                 0x00003e08   Data          42  serial_manager.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003e08   Section        0  serial_manager.o(.rodata.str1.1)
    .L.str.5                                 0x00003e32   Data          11  serial_manager.o(.rodata.str1.1)
    .L.str.3                                 0x00003e3d   Data          12  serial_manager.o(.rodata.str1.1)
    .L.str.2                                 0x00003e49   Data          13  serial_manager.o(.rodata.str1.1)
    .L.str.2                                 0x00003e49   Data          13  serial_manager.o(.rodata.str1.1)
    .L.str.4                                 0x00003e56   Data           7  serial_manager.o(.rodata.str1.1)
    .L.str.6                                 0x00003e56   Data           7  serial_manager.o(.rodata.str1.1)
    .L.str.8                                 0x00003e56   Data           7  serial_manager.o(.rodata.str1.1)
    .L.str.3                                 0x00003e5d   Data           7  serial_manager.o(.rodata.str1.1)
    .L.str.7                                 0x00003e5d   Data           7  serial_manager.o(.rodata.str1.1)
    .L.str.1                                 0x00003e64   Data          44  serial_port_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003e64   Section        0  serial_port_uart.o(.rodata.str1.1)
    .L.str.3                                 0x00003e90   Data          71  usart_adapter.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003e90   Section        0  usart_adapter.o(.rodata.str1.1)
    .L.str.5                                 0x00003ed7   Data           5  usart_adapter.o(.rodata.str1.1)
    .L.str.1                                 0x00003edc   Data          31  usart_adapter.o(.rodata.str1.1)
    .L.str.1                                 0x00003efb   Data          21  fsl_common.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003efb   Section        0  fsl_common.o(.rodata.str1.1)
    .L.str.1                                 0x00003f10   Data          23  fsl_flexcomm.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003f10   Section        0  fsl_flexcomm.o(.rodata.str1.1)
    .L.str                                   0x00003f27   Data          14  fsl_reset.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003f27   Section        0  fsl_reset.o(.rodata.str1.1)
    .L.str.1                                 0x00003f35   Data          20  fsl_reset.o(.rodata.str1.1)
    .L.str.8                                 0x00003f49   Data          36  fsl_usart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003f49   Section        0  fsl_usart.o(.rodata.str1.1)
    .L.str.3                                 0x00003f6c   Data          13  fsl_usart.o(.rodata.str1.1)
    .L.str.11                                0x00003f6d   Data          49  fsl_usart.o(.rodata.str1.1)
    .L.str.10                                0x00003f9e   Data          56  fsl_usart.o(.rodata.str1.1)
    .L.str.1                                 0x00003fd6   Data          20  fsl_usart.o(.rodata.str1.1)
    .L.str.2                                 0x00003fea   Data          15  fsl_usart.o(.rodata.str1.1)
    .L.str                                   0x00003ff2   Data           7  fsl_usart.o(.rodata.str1.1)
    .L.str.4                                 0x00003ff2   Data           7  fsl_usart.o(.rodata.str1.1)
    .L.str.1                                 0x00003ff9   Data          70  fsl_gint.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003ff9   Section        0  fsl_gint.o(.rodata.str1.1)
    .L.str.12                                0x00004006   Data          14  fsl_usart.o(.rodata.str1.1)
    .L.str                                   0x0000403f   Data          13  fsl_pint.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000403f   Section        0  fsl_pint.o(.rodata.str1.1)
    .L.str.1                                 0x0000404c   Data          70  fsl_pint.o(.rodata.str1.1)
    .L.str.1                                 0x00004092   Data          30  fsl_debug_console.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004092   Section        0  fsl_debug_console.o(.rodata.str1.1)
    .L.str.2                                 0x000040b0   Data          10  fsl_debug_console.o(.rodata.str1.1)
    .L.str                                   0x000040ba   Data          11  fsl_debug_console.o(.rodata.str1.1)
    .L.str.5                                 0x000040c5   Data          40  fsl_debug_console.o(.rodata.str1.1)
    uxCriticalNesting                        0x2000005c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000005c   Section        0  port.o(.data.uxCriticalNesting)
    pxDelayedTaskList                        0x200000a8   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200000a8   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200000ac   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200000ac   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200000b0   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200000b0   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x200000b4   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200000b4   Section        0  tasks.o(.bss.pxReadyTasksLists)
    s_Pll_Freq                               0x2000011c   Data           4  fsl_clock.o(.bss.s_Pll_Freq)
    [Anonymous Symbol]                       0x2000011c   Section        0  fsl_clock.o(.bss.s_Pll_Freq)
    s_debugConsoleState                      0x20000120   Data          28  fsl_debug_console.o(.bss.s_debugConsoleState)
    [Anonymous Symbol]                       0x20000120   Section        0  fsl_debug_console.o(.bss.s_debugConsoleState)
    s_flexcommHandle                         0x2000013c   Data          40  fsl_flexcomm.o(.bss.s_flexcommHandle)
    [Anonymous Symbol]                       0x2000013c   Section        0  fsl_flexcomm.o(.bss.s_flexcommHandle)
    s_flexcommIrqHandler                     0x20000164   Data          40  fsl_flexcomm.o(.bss.s_flexcommIrqHandler)
    [Anonymous Symbol]                       0x20000164   Section        0  fsl_flexcomm.o(.bss.s_flexcommIrqHandler)
    s_gintCallback                           0x2000018c   Data           8  fsl_gint.o(.bss.s_gintCallback)
    [Anonymous Symbol]                       0x2000018c   Section        0  fsl_gint.o(.bss.s_gintCallback)
    s_pintCallback                           0x20000194   Data          32  fsl_pint.o(.bss.s_pintCallback)
    [Anonymous Symbol]                       0x20000194   Section        0  fsl_pint.o(.bss.s_pintCallback)
    ucHeap                                   0x200001b6   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200001b6   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200029b8   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200029b8   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxPendedTicks                            0x200029bc   Data           4  tasks.o(.bss.uxPendedTicks)
    [Anonymous Symbol]                       0x200029bc   Section        0  tasks.o(.bss.uxPendedTicks)
    uxSchedulerSuspended                     0x200029c0   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200029c0   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200029c4   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200029c4   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200029c8   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200029c8   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xBlockAllocatedBit                       0x200029cc   Data           1  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x200029cc   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x200029d0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200029d0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200029e4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200029e4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200029f8   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200029f8   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xMinimumEverFreeBytesRemaining           0x200029fc   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x200029fc   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002a00   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002a00   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002a04   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002a04   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendingReadyList                        0x20002a08   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002a08   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002a1c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002a1c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002a20   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002a20   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002a28   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002a28   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002a3c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002a3c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002a50   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002a50   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20002a54   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002a54   Section        0  tasks.o(.bss.xYieldPending)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Number       292  startup_lpc54608.o(.isr_vector)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x00000401   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000401   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x00000405   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000409   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000409   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000409   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000409   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000411   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000411   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000415   Thumb Code    28  startup_lpc54608.o(.text)
    ADC0_SEQA_DriverIRQHandler               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    ADC0_SEQB_DriverIRQHandler               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    ADC0_THCMP_DriverIRQHandler              0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CAN0_IRQ0_DriverIRQHandler               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CAN0_IRQ1_DriverIRQHandler               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CAN1_IRQ0_DriverIRQHandler               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CAN1_IRQ1_DriverIRQHandler               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER0_DriverIRQHandler                 0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER1_DriverIRQHandler                 0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER2_DriverIRQHandler                 0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER3_DriverIRQHandler                 0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER4_DriverIRQHandler                 0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    DMA0_DriverIRQHandler                    0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    DMIC0_DriverIRQHandler                   0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    DefaultISR                               0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    EEPROM_DriverIRQHandler                  0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    ETHERNET_DriverIRQHandler                0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    ETHERNET_MACLP_DriverIRQHandler          0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    ETHERNET_PMT_DriverIRQHandler            0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    HWVAD0_DriverIRQHandler                  0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    LCD_DriverIRQHandler                     0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    MRT0_DriverIRQHandler                    0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    RIT_DriverIRQHandler                     0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    RTC_DriverIRQHandler                     0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    Reserved46_DriverIRQHandler              0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    Reserved47_DriverIRQHandler              0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    SCT0_DriverIRQHandler                    0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    SDIO_DriverIRQHandler                    0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    SHA_DriverIRQHandler                     0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    SMARTCARD0_DriverIRQHandler              0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    SMARTCARD1_DriverIRQHandler              0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    SPIFI0_DriverIRQHandler                  0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    USB0_DriverIRQHandler                    0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    USB0_NEEDCLK_DriverIRQHandler            0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    USB1_DriverIRQHandler                    0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    USB1_NEEDCLK_DriverIRQHandler            0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    UTICK0_DriverIRQHandler                  0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    WDT_BOD_DriverIRQHandler                 0x00000431   Thumb Code     4  startup_lpc54608.o(.text)
    NMI_Handler                              0x00000435   Thumb Code     4  startup_lpc54608.o(.text)
    HardFault_Handler                        0x00000439   Thumb Code     4  startup_lpc54608.o(.text)
    MemManage_Handler                        0x0000043d   Thumb Code     4  startup_lpc54608.o(.text)
    BusFault_Handler                         0x00000441   Thumb Code     4  startup_lpc54608.o(.text)
    UsageFault_Handler                       0x00000445   Thumb Code     4  startup_lpc54608.o(.text)
    DebugMon_Handler                         0x0000044d   Thumb Code     4  startup_lpc54608.o(.text)
    WDT_BOD_IRQHandler                       0x00000459   Thumb Code     4  startup_lpc54608.o(.text)
    DMA0_IRQHandler                          0x0000045d   Thumb Code     4  startup_lpc54608.o(.text)
    GINT0_IRQHandler                         0x00000461   Thumb Code     4  startup_lpc54608.o(.text)
    GINT1_IRQHandler                         0x00000465   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT0_IRQHandler                      0x00000469   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT1_IRQHandler                      0x0000046d   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT2_IRQHandler                      0x00000471   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT3_IRQHandler                      0x00000475   Thumb Code     4  startup_lpc54608.o(.text)
    UTICK0_IRQHandler                        0x00000479   Thumb Code     4  startup_lpc54608.o(.text)
    MRT0_IRQHandler                          0x0000047d   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER0_IRQHandler                       0x00000481   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER1_IRQHandler                       0x00000485   Thumb Code     4  startup_lpc54608.o(.text)
    SCT0_IRQHandler                          0x00000489   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER3_IRQHandler                       0x0000048d   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM0_IRQHandler                     0x00000491   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM1_IRQHandler                     0x00000495   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM2_IRQHandler                     0x00000499   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM3_IRQHandler                     0x0000049d   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM4_IRQHandler                     0x000004a1   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM5_IRQHandler                     0x000004a5   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM6_IRQHandler                     0x000004a9   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM7_IRQHandler                     0x000004ad   Thumb Code     4  startup_lpc54608.o(.text)
    ADC0_SEQA_IRQHandler                     0x000004b1   Thumb Code     4  startup_lpc54608.o(.text)
    ADC0_SEQB_IRQHandler                     0x000004b5   Thumb Code     4  startup_lpc54608.o(.text)
    ADC0_THCMP_IRQHandler                    0x000004b9   Thumb Code     4  startup_lpc54608.o(.text)
    DMIC0_IRQHandler                         0x000004bd   Thumb Code     4  startup_lpc54608.o(.text)
    HWVAD0_IRQHandler                        0x000004c1   Thumb Code     4  startup_lpc54608.o(.text)
    USB0_NEEDCLK_IRQHandler                  0x000004c5   Thumb Code     4  startup_lpc54608.o(.text)
    USB0_IRQHandler                          0x000004c9   Thumb Code     4  startup_lpc54608.o(.text)
    RTC_IRQHandler                           0x000004cd   Thumb Code     4  startup_lpc54608.o(.text)
    Reserved46_IRQHandler                    0x000004d1   Thumb Code     4  startup_lpc54608.o(.text)
    Reserved47_IRQHandler                    0x000004d5   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT4_IRQHandler                      0x000004d9   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT5_IRQHandler                      0x000004dd   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT6_IRQHandler                      0x000004e1   Thumb Code     4  startup_lpc54608.o(.text)
    PIN_INT7_IRQHandler                      0x000004e5   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER2_IRQHandler                       0x000004e9   Thumb Code     4  startup_lpc54608.o(.text)
    CTIMER4_IRQHandler                       0x000004ed   Thumb Code     4  startup_lpc54608.o(.text)
    RIT_IRQHandler                           0x000004f1   Thumb Code     4  startup_lpc54608.o(.text)
    SPIFI0_IRQHandler                        0x000004f5   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM8_IRQHandler                     0x000004f9   Thumb Code     4  startup_lpc54608.o(.text)
    FLEXCOMM9_IRQHandler                     0x000004fd   Thumb Code     4  startup_lpc54608.o(.text)
    SDIO_IRQHandler                          0x00000501   Thumb Code     4  startup_lpc54608.o(.text)
    CAN0_IRQ0_IRQHandler                     0x00000505   Thumb Code     4  startup_lpc54608.o(.text)
    CAN0_IRQ1_IRQHandler                     0x00000509   Thumb Code     4  startup_lpc54608.o(.text)
    CAN1_IRQ0_IRQHandler                     0x0000050d   Thumb Code     4  startup_lpc54608.o(.text)
    CAN1_IRQ1_IRQHandler                     0x00000511   Thumb Code     4  startup_lpc54608.o(.text)
    USB1_IRQHandler                          0x00000515   Thumb Code     4  startup_lpc54608.o(.text)
    USB1_NEEDCLK_IRQHandler                  0x00000519   Thumb Code     4  startup_lpc54608.o(.text)
    ETHERNET_IRQHandler                      0x0000051d   Thumb Code     4  startup_lpc54608.o(.text)
    ETHERNET_PMT_IRQHandler                  0x00000521   Thumb Code     4  startup_lpc54608.o(.text)
    ETHERNET_MACLP_IRQHandler                0x00000525   Thumb Code     4  startup_lpc54608.o(.text)
    EEPROM_IRQHandler                        0x00000529   Thumb Code     4  startup_lpc54608.o(.text)
    LCD_IRQHandler                           0x0000052d   Thumb Code     4  startup_lpc54608.o(.text)
    SHA_IRQHandler                           0x00000531   Thumb Code     4  startup_lpc54608.o(.text)
    SMARTCARD0_IRQHandler                    0x00000535   Thumb Code     4  startup_lpc54608.o(.text)
    SMARTCARD1_IRQHandler                    0x00000539   Thumb Code     4  startup_lpc54608.o(.text)
    __aeabi_uldivmod                         0x00000645   Thumb Code    98  uldiv.o(.text)
    ___aeabi_memcpy8$ret                     0x000006a7   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x000006a7   Thumb Code    40  memcpy.o(.text)
    __aeabi_memcpy4                          0x000006a7   Thumb Code     0  memcpy.o(.text)
    memcpy                                   0x000006a7   Thumb Code     0  memcpy.o(.text)
    __aeabi_memset                           0x000006cf   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000006cf   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000006cf   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000006dd   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000006dd   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000006dd   Thumb Code     0  memseta.o(.text)
    memset                                   0x000006e1   Thumb Code    18  memseta.o(.text)
    strlen                                   0x000006f3   Thumb Code    14  strlen.o(.text)
    __aeabi_llsl                             0x00000701   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000701   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0000071f   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x0000071f   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x00000741   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000741   Thumb Code     0  init.o(.text)
    BOARD_BootClockPLL180M                   0x00000765   Thumb Code   196  clock_config.o(.text.BOARD_BootClockPLL180M)
    BOARD_InitDebugConsole                   0x00000829   Thumb Code    92  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x00000885   Thumb Code    22  pin_mux.o(.text.BOARD_InitPins)
    CLOCK_AttachClk                          0x0000089d   Thumb Code    96  fsl_clock.o(.text.CLOCK_AttachClk)
    CLOCK_GetCoreSysClkFreq                  0x000009f5   Thumb Code    86  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    CLOCK_GetFRGInputClock                   0x00000a4d   Thumb Code    42  fsl_clock.o(.text.CLOCK_GetFRGInputClock)
    CLOCK_GetFlexCommClkFreq                 0x00000a79   Thumb Code    76  fsl_clock.o(.text.CLOCK_GetFlexCommClkFreq)
    CLOCK_GetFrgClkFreq                      0x00000ac5   Thumb Code    50  fsl_clock.o(.text.CLOCK_GetFrgClkFreq)
    CLOCK_GetFro12MFreq                      0x00000af9   Thumb Code    28  fsl_clock.o(.text.CLOCK_GetFro12MFreq)
    CLOCK_GetFroHfFreq                       0x00000b15   Thumb Code    50  fsl_clock.o(.text.CLOCK_GetFroHfFreq)
    CLOCK_GetPllOutFreq                      0x00000b49   Thumb Code    12  fsl_clock.o(.text.CLOCK_GetPllOutFreq)
    CLOCK_GetWdtOscFreq                      0x00000b55   Thumb Code    84  fsl_clock.o(.text.CLOCK_GetWdtOscFreq)
    CLOCK_SetClkDiv                          0x00000bb9   Thumb Code    36  fsl_clock.o(.text.CLOCK_SetClkDiv)
    CLOCK_SetFLASHAccessCyclesForFreq        0x00000bf5   Thumb Code   148  fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq)
    CLOCK_SetPLLFreq                         0x00000c89   Thumb Code   182  fsl_clock.o(.text.CLOCK_SetPLLFreq)
    CLOCK_SetupFROClocking                   0x00000d41   Thumb Code   130  fsl_clock.o(.text.CLOCK_SetupFROClocking)
    DbgConsole_Getchar                       0x00000e41   Thumb Code    26  fsl_debug_console.o(.text.DbgConsole_Getchar)
    DbgConsole_Init                          0x00000e5d   Thumb Code   190  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x00000f61   Thumb Code    76  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_Putchar                       0x00000fad   Thumb Code    18  fsl_debug_console.o(.text.DbgConsole_Putchar)
    DbgConsole_ReadCharacter                 0x00000fc1   Thumb Code    56  fsl_debug_console.o(.text.DbgConsole_ReadCharacter)
    DbgConsole_ReadOneCharacter              0x00000ff9   Thumb Code    28  fsl_debug_console.o(.text.DbgConsole_ReadOneCharacter)
    DbgConsole_SendDataReliable              0x00001015   Thumb Code   106  fsl_debug_console.o(.text.DbgConsole_SendDataReliable)
    FLEXCOMM0_DriverIRQHandler               0x000010d9   Thumb Code    80  fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler)
    FLEXCOMM1_DriverIRQHandler               0x00001129   Thumb Code    80  fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler)
    FLEXCOMM2_DriverIRQHandler               0x00001179   Thumb Code    80  fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler)
    FLEXCOMM3_DriverIRQHandler               0x000011c9   Thumb Code    80  fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler)
    FLEXCOMM4_DriverIRQHandler               0x00001219   Thumb Code    80  fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler)
    FLEXCOMM5_DriverIRQHandler               0x00001269   Thumb Code    80  fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler)
    FLEXCOMM6_DriverIRQHandler               0x000012b9   Thumb Code    84  fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler)
    FLEXCOMM7_DriverIRQHandler               0x0000130d   Thumb Code    84  fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler)
    FLEXCOMM8_DriverIRQHandler               0x00001361   Thumb Code    84  fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler)
    FLEXCOMM9_DriverIRQHandler               0x000013b5   Thumb Code    84  fsl_flexcomm.o(.text.FLEXCOMM9_DriverIRQHandler)
    FLEXCOMM_GetInstance                     0x00001409   Thumb Code   116  fsl_flexcomm.o(.text.FLEXCOMM_GetInstance)
    FLEXCOMM_Init                            0x0000147d   Thumb Code   104  fsl_flexcomm.o(.text.FLEXCOMM_Init)
    FLEXCOMM_SetIRQHandler                   0x0000150d   Thumb Code    40  fsl_flexcomm.o(.text.FLEXCOMM_SetIRQHandler)
    GINT0_DriverIRQHandler                   0x00001569   Thumb Code    40  fsl_gint.o(.text.GINT0_DriverIRQHandler)
    GINT1_DriverIRQHandler                   0x00001591   Thumb Code    40  fsl_gint.o(.text.GINT1_DriverIRQHandler)
    GINT_ConfigPins                          0x000015c5   Thumb Code    10  fsl_gint.o(.text.GINT_ConfigPins)
    GINT_EnableCallback                      0x000015d1   Thumb Code    42  fsl_gint.o(.text.GINT_EnableCallback)
    GINT_Init                                0x00001651   Thumb Code    58  fsl_gint.o(.text.GINT_Init)
    GINT_SetCtrl                             0x0000168d   Thumb Code    44  fsl_gint.o(.text.GINT_SetCtrl)
    GPIO_Init                                0x000016dd   Thumb Code   110  freertos_hello.o(.text.GPIO_Init)
    GPIO_Interrupt_Init                      0x0000174d   Thumb Code   126  freertos_hello.o(.text.GPIO_Interrupt_Init)
    GPIO_PinInit                             0x000017cd   Thumb Code    78  fsl_gpio.o(.text.GPIO_PinInit)
    GPIO_PortInit                            0x00001831   Thumb Code   136  fsl_gpio.o(.text.GPIO_PortInit)
    HAL_UartInit                             0x000018dd   Thumb Code   208  usart_adapter.o(.text.HAL_UartInit)
    HAL_UartReceiveBlocking                  0x000019ad   Thumb Code   106  usart_adapter.o(.text.HAL_UartReceiveBlocking)
    HAL_UartSendBlocking                     0x00001a19   Thumb Code   102  usart_adapter.o(.text.HAL_UartSendBlocking)
    INPUTMUX_AttachSignal                    0x00001a81   Thumb Code    14  fsl_inputmux.o(.text.INPUTMUX_AttachSignal)
    INPUTMUX_Deinit                          0x00001a91   Thumb Code     4  fsl_inputmux.o(.text.INPUTMUX_Deinit)
    INPUTMUX_Init                            0x00001a95   Thumb Code     4  fsl_inputmux.o(.text.INPUTMUX_Init)
    PINT_EnableCallbackByIndex               0x00001aad   Thumb Code    60  fsl_pint.o(.text.PINT_EnableCallbackByIndex)
    PINT_Init                                0x00001ae9   Thumb Code   108  fsl_pint.o(.text.PINT_Init)
    PINT_PatternMatchResetDetectLogic        0x00001b55   Thumb Code    22  fsl_pint.o(.text.PINT_PatternMatchResetDetectLogic)
    PINT_PinInterruptClrStatus               0x00001b85   Thumb Code    24  fsl_pint.o(.text.PINT_PinInterruptClrStatus)
    PINT_PinInterruptConfig                  0x00001b9d   Thumb Code   108  fsl_pint.o(.text.PINT_PinInterruptConfig)
    PIN_INT0_DriverIRQHandler                0x00001c09   Thumb Code    54  fsl_pint.o(.text.PIN_INT0_DriverIRQHandler)
    PIN_INT1_DriverIRQHandler                0x00001c41   Thumb Code    54  fsl_pint.o(.text.PIN_INT1_DriverIRQHandler)
    PIN_INT2_DriverIRQHandler                0x00001c79   Thumb Code    54  fsl_pint.o(.text.PIN_INT2_DriverIRQHandler)
    PIN_INT3_DriverIRQHandler                0x00001cb1   Thumb Code    54  fsl_pint.o(.text.PIN_INT3_DriverIRQHandler)
    PIN_INT4_DriverIRQHandler                0x00001ce9   Thumb Code    54  fsl_pint.o(.text.PIN_INT4_DriverIRQHandler)
    PIN_INT5_DriverIRQHandler                0x00001d21   Thumb Code    54  fsl_pint.o(.text.PIN_INT5_DriverIRQHandler)
    PIN_INT6_DriverIRQHandler                0x00001d59   Thumb Code    54  fsl_pint.o(.text.PIN_INT6_DriverIRQHandler)
    PIN_INT7_DriverIRQHandler                0x00001d91   Thumb Code    54  fsl_pint.o(.text.PIN_INT7_DriverIRQHandler)
    POWER_SetPLL                             0x00001e11   Thumb Code    28  fsl_power_lib.o(.text.POWER_SetPLL)
    POWER_SetVoltageForFreq                  0x00001e2d   Thumb Code    52  fsl_power_lib.o(.text.POWER_SetVoltageForFreq)
    PendSV_Handler                           0x00001e61   Thumb Code   100  port.o(.text.PendSV_Handler)
    PinInt0_Callback                         0x00001ec5   Thumb Code    64  freertos_hello.o(.text.PinInt0_Callback)
    RESET_ClearPeripheralReset               0x00001f05   Thumb Code    90  fsl_reset.o(.text.RESET_ClearPeripheralReset)
    RESET_PeripheralReset                    0x00001f61   Thumb Code    18  fsl_reset.o(.text.RESET_PeripheralReset)
    RESET_SetPeripheralReset                 0x00001f75   Thumb Code    84  fsl_reset.o(.text.RESET_SetPeripheralReset)
    SDK_DelayAtLeastUs                       0x00001fc9   Thumb Code   112  fsl_common.o(.text.SDK_DelayAtLeastUs)
    SVC_Handler                              0x00002041   Thumb Code    36  port.o(.text.SVC_Handler)
    SerialManager_Init                       0x00002065   Thumb Code   100  serial_manager.o(.text.SerialManager_Init)
    SerialManager_OpenReadHandle             0x000020c9   Thumb Code   102  serial_manager.o(.text.SerialManager_OpenReadHandle)
    SerialManager_OpenWriteHandle            0x00002131   Thumb Code    88  serial_manager.o(.text.SerialManager_OpenWriteHandle)
    SerialManager_ReadBlocking               0x00002205   Thumb Code     4  serial_manager.o(.text.SerialManager_ReadBlocking)
    SerialManager_WriteBlocking              0x000022b5   Thumb Code     4  serial_manager.o(.text.SerialManager_WriteBlocking)
    Serial_UartInit                          0x000022b9   Thumb Code   108  serial_port_uart.o(.text.Serial_UartInit)
    Serial_UartRead                          0x00002325   Thumb Code    82  serial_port_uart.o(.text.Serial_UartRead)
    Serial_UartWrite                         0x00002379   Thumb Code    82  serial_port_uart.o(.text.Serial_UartWrite)
    StrFormatPrintf                          0x000023cd   Thumb Code   554  fsl_str.o(.text.StrFormatPrintf)
    SysTick_Handler                          0x000025f9   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00002629   Thumb Code    50  system_lpc54608.o(.text.SystemInit)
    SystemInitHook                           0x0000265d   Thumb Code     2  system_lpc54608.o(.text.SystemInitHook)
    Task_Create                              0x00002661   Thumb Code   172  freertos_hello.o(.text.Task_Create)
    USART_GetDefaultConfig                   0x00002721   Thumb Code    68  fsl_usart.o(.text.USART_GetDefaultConfig)
    USART_GetInstance                        0x00002765   Thumb Code   112  fsl_usart.o(.text.USART_GetInstance)
    USART_Init                               0x000027d5   Thumb Code   328  fsl_usart.o(.text.USART_Init)
    USART_ReadBlocking                       0x0000291d   Thumb Code   170  fsl_usart.o(.text.USART_ReadBlocking)
    USART_SetBaudRate                        0x000029c9   Thumb Code   248  fsl_usart.o(.text.USART_SetBaudRate)
    USART_TransferCreateHandle               0x00002ac1   Thumb Code   184  fsl_usart.o(.text.USART_TransferCreateHandle)
    USART_TransferGetRxRingBufferLength      0x00002b79   Thumb Code    40  fsl_usart.o(.text.USART_TransferGetRxRingBufferLength)
    USART_TransferHandleIRQ                  0x00002ba1   Thumb Code   584  fsl_usart.o(.text.USART_TransferHandleIRQ)
    USART_TransferReceiveNonBlocking         0x00002e19   Thumb Code   290  fsl_usart.o(.text.USART_TransferReceiveNonBlocking)
    USART_TransferSendNonBlocking            0x00002f3d   Thumb Code   120  fsl_usart.o(.text.USART_TransferSendNonBlocking)
    USART_UserCallback                       0x00002fb5   Thumb Code    60  freertos_hello.o(.text.USART_UserCallback)
    USART_WriteBlocking                      0x00002ff1   Thumb Code    72  fsl_usart.o(.text.USART_WriteBlocking)
    __aeabi_assert                           0x000030d9   Thumb Code    60  fsl_assert.o(.text.__aeabi_assert)
    gint0_callback                           0x00003115   Thumb Code    64  freertos_hello.o(.text.gint0_callback)
    main                                     0x00003155   Thumb Code   336  freertos_hello.o(.text.main)
    pvPortMalloc                             0x00003651   Thumb Code   300  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x0000377d   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x000037e1   Thumb Code    40  list.o(.text.uxListRemove)
    vListInitialise                          0x00003809   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00003821   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00003829   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x00003865   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00003881   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000038c9   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x000038f9   Thumb Code   126  heap_4.o(.text.vPortFree)
    vTaskDelayUntil                          0x00003979   Thumb Code   166  tasks.o(.text.vTaskDelayUntil)
    vTaskSuspendAll                          0x00003a21   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00003a31   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xTaskCreate                              0x00003ab9   Thumb Code    88  tasks.o(.text.xTaskCreate)
    xTaskGetTickCount                        0x00003b11   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003b1d   Thumb Code   332  tasks.o(.text.xTaskIncrementTick)
    xTaskResumeAll                           0x00003c69   Thumb Code   280  tasks.o(.text.xTaskResumeAll)
    __scatterload_copy                       0x00003d81   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00003d8f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00003d91   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x000040f0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004110   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_lpc54608.o(.data.SystemCoreClock)
    g_tipString                              0x20000004   Data          84  freertos_hello.o(.data.g_tipString)
    rxBufferEmpty                            0x20000058   Data           1  freertos_hello.o(.data.rxBufferEmpty)
    g_rxBuffer                               0x20000060   Data           8  freertos_hello.o(.bss.g_rxBuffer)
    g_serialHandle                           0x20000068   Data           4  fsl_debug_console.o(.bss.g_serialHandle)
    g_txBuffer                               0x2000006c   Data           8  freertos_hello.o(.bss.g_txBuffer)
    g_uartHandle                             0x20000074   Data          48  freertos_hello.o(.bss.g_uartHandle)
    pxCurrentTCB                             0x200000a4   Data           4  tasks.o(.bss.pxCurrentTCB)
    rxOnGoing                                0x20000118   Data           1  freertos_hello.o(.bss.rxOnGoing)
    txBufferFull                             0x200001b4   Data           1  freertos_hello.o(.bss.txBufferFull)
    txOnGoing                                0x200001b5   Data           1  freertos_hello.o(.bss.txOnGoing)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x20002a58   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x20002e58   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20028000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000401

  Load Region LR_m_text (Base: 0x00000000, Size: 0x00004170, Max: 0x00080000, ABSOLUTE)

    Execution Region VECTOR_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000124, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000124   Data   RO         1273    .isr_vector         startup_lpc54608.o


    Execution Region ER_m_text (Exec base: 0x00000400, Load base: 0x00000400, Size: 0x00003d10, Max: 0x0007fc00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000400   0x00000400   0x00000000   Code   RO         1367  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000400   0x00000400   0x00000004   Code   RO         1424    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x00000404   0x00000404   0x00000004   Code   RO         1427    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000408   0x00000408   0x00000000   Code   RO         1429    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000408   0x00000408   0x00000000   Code   RO         1431    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000408   0x00000408   0x00000008   Code   RO         1432    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000410   0x00000410   0x00000000   Code   RO         1434    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000410   0x00000410   0x00000000   Code   RO         1436    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000410   0x00000410   0x00000004   Code   RO         1425    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x00000414   0x00000414   0x00000230   Code   RO         1272    .text               startup_lpc54608.o
    0x00000644   0x00000644   0x00000062   Code   RO         1370    .text               mc_w.l(uldiv.o)
    0x000006a6   0x000006a6   0x00000028   Code   RO         1372    .text               mc_w.l(memcpy.o)
    0x000006ce   0x000006ce   0x00000024   Code   RO         1378    .text               mc_w.l(memseta.o)
    0x000006f2   0x000006f2   0x0000000e   Code   RO         1380    .text               mc_w.l(strlen.o)
    0x00000700   0x00000700   0x0000001e   Code   RO         1438    .text               mc_w.l(llshl.o)
    0x0000071e   0x0000071e   0x00000020   Code   RO         1440    .text               mc_w.l(llushr.o)
    0x0000073e   0x0000073e   0x00000002   PAD
    0x00000740   0x00000740   0x00000024   Code   RO         1449    .text               mc_w.l(init.o)
    0x00000764   0x00000764   0x000000c4   Code   RO          508    .text.BOARD_BootClockPLL180M  clock_config.o
    0x00000828   0x00000828   0x0000005c   Code   RO          481    .text.BOARD_InitDebugConsole  board.o
    0x00000884   0x00000884   0x00000016   Code   RO          527    .text.BOARD_InitPins  pin_mux.o
    0x0000089a   0x0000089a   0x00000002   PAD
    0x0000089c   0x0000089c   0x00000060   Code   RO          700    .text.CLOCK_AttachClk  fsl_clock.o
    0x000008fc   0x000008fc   0x00000010   Code   RO         1146    .text.CLOCK_DisableClock  fsl_inputmux.o
    0x0000090c   0x0000090c   0x00000010   Code   RO          529    .text.CLOCK_EnableClock  pin_mux.o
    0x0000091c   0x0000091c   0x00000032   Code   RO          953    .text.CLOCK_EnableClock  fsl_flexcomm.o
    0x0000094e   0x0000094e   0x00000002   PAD
    0x00000950   0x00000950   0x00000032   Code   RO          996    .text.CLOCK_EnableClock  fsl_gpio.o
    0x00000982   0x00000982   0x00000002   PAD
    0x00000984   0x00000984   0x00000032   Code   RO         1090    .text.CLOCK_EnableClock  fsl_gint.o
    0x000009b6   0x000009b6   0x00000002   PAD
    0x000009b8   0x000009b8   0x00000010   Code   RO         1140    .text.CLOCK_EnableClock  fsl_inputmux.o
    0x000009c8   0x000009c8   0x00000010   Code   RO         1159    .text.CLOCK_EnableClock  fsl_pint.o
    0x000009d8   0x000009d8   0x0000001a   Code   RO          816    .text.CLOCK_Enable_SysOsc  fsl_clock.o
    0x000009f2   0x000009f2   0x00000002   PAD
    0x000009f4   0x000009f4   0x00000056   Code   RO          712    .text.CLOCK_GetCoreSysClkFreq  fsl_clock.o
    0x00000a4a   0x00000a4a   0x00000002   PAD
    0x00000a4c   0x00000a4c   0x0000002a   Code   RO          760    .text.CLOCK_GetFRGInputClock  fsl_clock.o
    0x00000a76   0x00000a76   0x00000002   PAD
    0x00000a78   0x00000a78   0x0000004c   Code   RO          756    .text.CLOCK_GetFlexCommClkFreq  fsl_clock.o
    0x00000ac4   0x00000ac4   0x00000032   Code   RO          758    .text.CLOCK_GetFrgClkFreq  fsl_clock.o
    0x00000af6   0x00000af6   0x00000002   PAD
    0x00000af8   0x00000af8   0x0000001c   Code   RO          746    .text.CLOCK_GetFro12MFreq  fsl_clock.o
    0x00000b14   0x00000b14   0x00000032   Code   RO          718    .text.CLOCK_GetFroHfFreq  fsl_clock.o
    0x00000b46   0x00000b46   0x00000002   PAD
    0x00000b48   0x00000b48   0x0000000c   Code   RO          720    .text.CLOCK_GetPllOutFreq  fsl_clock.o
    0x00000b54   0x00000b54   0x00000054   Code   RO          716    .text.CLOCK_GetWdtOscFreq  fsl_clock.o
    0x00000ba8   0x00000ba8   0x00000010   Code   RO          820    .text.CLOCK_IsSystemPLLLocked  fsl_clock.o
    0x00000bb8   0x00000bb8   0x00000024   Code   RO          704    .text.CLOCK_SetClkDiv  fsl_clock.o
    0x00000bdc   0x00000bdc   0x00000016   Code   RO          770    .text.CLOCK_SetFLASHAccessCycles  fsl_clock.o
    0x00000bf2   0x00000bf2   0x00000002   PAD
    0x00000bf4   0x00000bf4   0x00000094   Code   RO          768    .text.CLOCK_SetFLASHAccessCyclesForFreq  fsl_clock.o
    0x00000c88   0x00000c88   0x000000b6   Code   RO          832    .text.CLOCK_SetPLLFreq  fsl_clock.o
    0x00000d3e   0x00000d3e   0x00000002   PAD
    0x00000d40   0x00000d40   0x00000082   Code   RO          706    .text.CLOCK_SetupFROClocking  fsl_clock.o
    0x00000dc2   0x00000dc2   0x00000002   PAD
    0x00000dc4   0x00000dc4   0x0000007a   Code   RO         1331    .text.ConvertRadixNumToString  fsl_str.o
    0x00000e3e   0x00000e3e   0x00000002   PAD
    0x00000e40   0x00000e40   0x0000001a   Code   RO         1315    .text.DbgConsole_Getchar  fsl_debug_console.o
    0x00000e5a   0x00000e5a   0x00000002   PAD
    0x00000e5c   0x00000e5c   0x000000be   Code   RO         1299    .text.DbgConsole_Init  fsl_debug_console.o
    0x00000f1a   0x00000f1a   0x00000002   PAD
    0x00000f1c   0x00000f1c   0x00000044   Code   RO         1307    .text.DbgConsole_PrintCallback  fsl_debug_console.o
    0x00000f60   0x00000f60   0x0000004c   Code   RO         1305    .text.DbgConsole_Printf  fsl_debug_console.o
    0x00000fac   0x00000fac   0x00000012   Code   RO         1309    .text.DbgConsole_Putchar  fsl_debug_console.o
    0x00000fbe   0x00000fbe   0x00000002   PAD
    0x00000fc0   0x00000fc0   0x00000038   Code   RO         1297    .text.DbgConsole_ReadCharacter  fsl_debug_console.o
    0x00000ff8   0x00000ff8   0x0000001c   Code   RO         1289    .text.DbgConsole_ReadOneCharacter  fsl_debug_console.o
    0x00001014   0x00001014   0x0000006a   Code   RO         1293    .text.DbgConsole_SendDataReliable  fsl_debug_console.o
    0x0000107e   0x0000107e   0x00000002   PAD
    0x00001080   0x00001080   0x0000000a   Code   RO          902    .text.DelayLoop     fsl_common.o
    0x0000108a   0x0000108a   0x00000002   PAD
    0x0000108c   0x0000108c   0x0000000c   Code   RO          585    .text.DisableGlobalIRQ  serial_manager.o
    0x00001098   0x00001098   0x0000000c   Code   RO         1064    .text.DisableGlobalIRQ  fsl_usart.o
    0x000010a4   0x000010a4   0x00000006   Code   RO          587    .text.EnableGlobalIRQ  serial_manager.o
    0x000010aa   0x000010aa   0x00000002   PAD
    0x000010ac   0x000010ac   0x00000006   Code   RO         1066    .text.EnableGlobalIRQ  fsl_usart.o
    0x000010b2   0x000010b2   0x00000002   PAD
    0x000010b4   0x000010b4   0x0000000c   Code   RO         1052    .text.EnableIRQ     fsl_usart.o
    0x000010c0   0x000010c0   0x0000000c   Code   RO         1106    .text.EnableIRQ     fsl_gint.o
    0x000010cc   0x000010cc   0x0000000c   Code   RO         1183    .text.EnableIRQ     fsl_pint.o
    0x000010d8   0x000010d8   0x00000050   Code   RO          959    .text.FLEXCOMM0_DriverIRQHandler  fsl_flexcomm.o
    0x00001128   0x00001128   0x00000050   Code   RO          961    .text.FLEXCOMM1_DriverIRQHandler  fsl_flexcomm.o
    0x00001178   0x00001178   0x00000050   Code   RO          963    .text.FLEXCOMM2_DriverIRQHandler  fsl_flexcomm.o
    0x000011c8   0x000011c8   0x00000050   Code   RO          965    .text.FLEXCOMM3_DriverIRQHandler  fsl_flexcomm.o
    0x00001218   0x00001218   0x00000050   Code   RO          967    .text.FLEXCOMM4_DriverIRQHandler  fsl_flexcomm.o
    0x00001268   0x00001268   0x00000050   Code   RO          969    .text.FLEXCOMM5_DriverIRQHandler  fsl_flexcomm.o
    0x000012b8   0x000012b8   0x00000054   Code   RO          971    .text.FLEXCOMM6_DriverIRQHandler  fsl_flexcomm.o
    0x0000130c   0x0000130c   0x00000054   Code   RO          973    .text.FLEXCOMM7_DriverIRQHandler  fsl_flexcomm.o
    0x00001360   0x00001360   0x00000054   Code   RO          975    .text.FLEXCOMM8_DriverIRQHandler  fsl_flexcomm.o
    0x000013b4   0x000013b4   0x00000054   Code   RO          977    .text.FLEXCOMM9_DriverIRQHandler  fsl_flexcomm.o
    0x00001408   0x00001408   0x00000074   Code   RO          949    .text.FLEXCOMM_GetInstance  fsl_flexcomm.o
    0x0000147c   0x0000147c   0x00000068   Code   RO          951    .text.FLEXCOMM_Init  fsl_flexcomm.o
    0x000014e4   0x000014e4   0x00000028   Code   RO          979    .text.FLEXCOMM_PeripheralIsPresent  fsl_flexcomm.o
    0x0000150c   0x0000150c   0x00000028   Code   RO          957    .text.FLEXCOMM_SetIRQHandler  fsl_flexcomm.o
    0x00001534   0x00001534   0x00000032   Code   RO          955    .text.FLEXCOMM_SetPeriph  fsl_flexcomm.o
    0x00001566   0x00001566   0x00000002   PAD
    0x00001568   0x00001568   0x00000028   Code   RO         1116    .text.GINT0_DriverIRQHandler  fsl_gint.o
    0x00001590   0x00001590   0x00000028   Code   RO         1118    .text.GINT1_DriverIRQHandler  fsl_gint.o
    0x000015b8   0x000015b8   0x0000000a   Code   RO         1102    .text.GINT_ClrStatus  fsl_gint.o
    0x000015c2   0x000015c2   0x00000002   PAD
    0x000015c4   0x000015c4   0x0000000a   Code   RO         1096    .text.GINT_ConfigPins  fsl_gint.o
    0x000015ce   0x000015ce   0x00000002   PAD
    0x000015d0   0x000015d0   0x0000002a   Code   RO         1100    .text.GINT_EnableCallback  fsl_gint.o
    0x000015fa   0x000015fa   0x00000002   PAD
    0x000015fc   0x000015fc   0x00000054   Code   RO         1088    .text.GINT_GetInstance  fsl_gint.o
    0x00001650   0x00001650   0x0000003a   Code   RO         1086    .text.GINT_Init     fsl_gint.o
    0x0000168a   0x0000168a   0x00000002   PAD
    0x0000168c   0x0000168c   0x0000002c   Code   RO         1092    .text.GINT_SetCtrl  fsl_gint.o
    0x000016b8   0x000016b8   0x00000024   Code   RO         1247    .text.GPCHAR_task   freertos_hello.o
    0x000016dc   0x000016dc   0x0000006e   Code   RO         1233    .text.GPIO_Init     freertos_hello.o
    0x0000174a   0x0000174a   0x00000002   PAD
    0x0000174c   0x0000174c   0x0000007e   Code   RO         1235    .text.GPIO_Interrupt_Init  freertos_hello.o
    0x000017ca   0x000017ca   0x00000002   PAD
    0x000017cc   0x000017cc   0x0000004e   Code   RO          998    .text.GPIO_PinInit  fsl_gpio.o
    0x0000181a   0x0000181a   0x00000002   PAD
    0x0000181c   0x0000181c   0x00000012   Code   RO         1239    .text.GPIO_PinWrite  freertos_hello.o
    0x0000182e   0x0000182e   0x00000002   PAD
    0x00001830   0x00001830   0x00000088   Code   RO          994    .text.GPIO_PortInit  fsl_gpio.o
    0x000018b8   0x000018b8   0x0000000c   Code   RO         1249    .text.GPIO_PortRead  freertos_hello.o
    0x000018c4   0x000018c4   0x0000000c   Code   RO         1251    .text.GPIO_PortToggle  freertos_hello.o
    0x000018d0   0x000018d0   0x0000000a   Code   RO          647    .text.HAL_UartGetStatus  usart_adapter.o
    0x000018da   0x000018da   0x00000002   PAD
    0x000018dc   0x000018dc   0x000000d0   Code   RO          645    .text.HAL_UartInit  usart_adapter.o
    0x000019ac   0x000019ac   0x0000006a   Code   RO          651    .text.HAL_UartReceiveBlocking  usart_adapter.o
    0x00001a16   0x00001a16   0x00000002   PAD
    0x00001a18   0x00001a18   0x00000066   Code   RO          653    .text.HAL_UartSendBlocking  usart_adapter.o
    0x00001a7e   0x00001a7e   0x00000002   PAD
    0x00001a80   0x00001a80   0x0000000e   Code   RO         1142    .text.INPUTMUX_AttachSignal  fsl_inputmux.o
    0x00001a8e   0x00001a8e   0x00000002   PAD
    0x00001a90   0x00001a90   0x00000004   Code   RO         1144    .text.INPUTMUX_Deinit  fsl_inputmux.o
    0x00001a94   0x00001a94   0x00000004   Code   RO         1138    .text.INPUTMUX_Init  fsl_inputmux.o
    0x00001a98   0x00001a98   0x00000012   Code   RO          531    .text.IOCON_PinMuxSet  pin_mux.o
    0x00001aaa   0x00001aaa   0x00000002   PAD
    0x00001aac   0x00001aac   0x0000003c   Code   RO         1185    .text.PINT_EnableCallbackByIndex  fsl_pint.o
    0x00001ae8   0x00001ae8   0x0000006c   Code   RO         1157    .text.PINT_Init     fsl_pint.o
    0x00001b54   0x00001b54   0x00000016   Code   RO         1173    .text.PINT_PatternMatchResetDetectLogic  fsl_pint.o
    0x00001b6a   0x00001b6a   0x00000002   PAD
    0x00001b6c   0x00001b6c   0x0000000a   Code   RO         1165    .text.PINT_PinInterruptClrFallFlag  fsl_pint.o
    0x00001b76   0x00001b76   0x00000002   PAD
    0x00001b78   0x00001b78   0x0000000a   Code   RO         1163    .text.PINT_PinInterruptClrRiseFlag  fsl_pint.o
    0x00001b82   0x00001b82   0x00000002   PAD
    0x00001b84   0x00001b84   0x00000018   Code   RO         1175    .text.PINT_PinInterruptClrStatus  fsl_pint.o
    0x00001b9c   0x00001b9c   0x0000006c   Code   RO         1161    .text.PINT_PinInterruptConfig  fsl_pint.o
    0x00001c08   0x00001c08   0x00000036   Code   RO         1197    .text.PIN_INT0_DriverIRQHandler  fsl_pint.o
    0x00001c3e   0x00001c3e   0x00000002   PAD
    0x00001c40   0x00001c40   0x00000036   Code   RO         1199    .text.PIN_INT1_DriverIRQHandler  fsl_pint.o
    0x00001c76   0x00001c76   0x00000002   PAD
    0x00001c78   0x00001c78   0x00000036   Code   RO         1201    .text.PIN_INT2_DriverIRQHandler  fsl_pint.o
    0x00001cae   0x00001cae   0x00000002   PAD
    0x00001cb0   0x00001cb0   0x00000036   Code   RO         1203    .text.PIN_INT3_DriverIRQHandler  fsl_pint.o
    0x00001ce6   0x00001ce6   0x00000002   PAD
    0x00001ce8   0x00001ce8   0x00000036   Code   RO         1205    .text.PIN_INT4_DriverIRQHandler  fsl_pint.o
    0x00001d1e   0x00001d1e   0x00000002   PAD
    0x00001d20   0x00001d20   0x00000036   Code   RO         1207    .text.PIN_INT5_DriverIRQHandler  fsl_pint.o
    0x00001d56   0x00001d56   0x00000002   PAD
    0x00001d58   0x00001d58   0x00000036   Code   RO         1209    .text.PIN_INT6_DriverIRQHandler  fsl_pint.o
    0x00001d8e   0x00001d8e   0x00000002   PAD
    0x00001d90   0x00001d90   0x00000036   Code   RO         1211    .text.PIN_INT7_DriverIRQHandler  fsl_pint.o
    0x00001dc6   0x00001dc6   0x00000002   PAD
    0x00001dc8   0x00001dc8   0x00000018   Code   RO          502    .text.POWER_DisablePD  clock_config.o
    0x00001de0   0x00001de0   0x00000018   Code   RO          708    .text.POWER_DisablePD  fsl_clock.o
    0x00001df8   0x00001df8   0x00000018   Code   RO          818    .text.POWER_EnablePD  fsl_clock.o
    0x00001e10   0x00001e10   0x0000001c   Code   RO         1360    .text.POWER_SetPLL  keil_lib_power.lib(fsl_power_lib.o)
    0x00001e2c   0x00001e2c   0x00000034   Code   RO         1358    .text.POWER_SetVoltageForFreq  keil_lib_power.lib(fsl_power_lib.o)
    0x00001e60   0x00001e60   0x00000064   Code   RO          434    .text.PendSV_Handler  port.o
    0x00001ec4   0x00001ec4   0x00000040   Code   RO         1243    .text.PinInt0_Callback  freertos_hello.o
    0x00001f04   0x00001f04   0x0000005a   Code   RO         1012    .text.RESET_ClearPeripheralReset  fsl_reset.o
    0x00001f5e   0x00001f5e   0x00000002   PAD
    0x00001f60   0x00001f60   0x00000012   Code   RO         1014    .text.RESET_PeripheralReset  fsl_reset.o
    0x00001f72   0x00001f72   0x00000002   PAD
    0x00001f74   0x00001f74   0x00000054   Code   RO         1010    .text.RESET_SetPeripheralReset  fsl_reset.o
    0x00001fc8   0x00001fc8   0x00000070   Code   RO          900    .text.SDK_DelayAtLeastUs  fsl_common.o
    0x00002038   0x00002038   0x00000008   PAD
    0x00002040   0x00002040   0x00000024   Code   RO          418    .text.SVC_Handler   port.o
    0x00002064   0x00002064   0x00000064   Code   RO          581    .text.SerialManager_Init  serial_manager.o
    0x000020c8   0x000020c8   0x00000066   Code   RO          593    .text.SerialManager_OpenReadHandle  serial_manager.o
    0x0000212e   0x0000212e   0x00000002   PAD
    0x00002130   0x00002130   0x00000058   Code   RO          589    .text.SerialManager_OpenWriteHandle  serial_manager.o
    0x00002188   0x00002188   0x0000007a   Code   RO          603    .text.SerialManager_Read  serial_manager.o
    0x00002202   0x00002202   0x00000002   PAD
    0x00002204   0x00002204   0x00000004   Code   RO          601    .text.SerialManager_ReadBlocking  serial_manager.o
    0x00002208   0x00002208   0x00000018   Code   RO          611    .text.SerialManager_StartReading  serial_manager.o
    0x00002220   0x00002220   0x00000018   Code   RO          609    .text.SerialManager_StartWriting  serial_manager.o
    0x00002238   0x00002238   0x0000007a   Code   RO          599    .text.SerialManager_Write  serial_manager.o
    0x000022b2   0x000022b2   0x00000002   PAD
    0x000022b4   0x000022b4   0x00000004   Code   RO          597    .text.SerialManager_WriteBlocking  serial_manager.o
    0x000022b8   0x000022b8   0x0000006c   Code   RO          623    .text.Serial_UartInit  serial_port_uart.o
    0x00002324   0x00002324   0x00000052   Code   RO          629    .text.Serial_UartRead  serial_port_uart.o
    0x00002376   0x00002376   0x00000002   PAD
    0x00002378   0x00002378   0x00000052   Code   RO          627    .text.Serial_UartWrite  serial_port_uart.o
    0x000023ca   0x000023ca   0x00000002   PAD
    0x000023cc   0x000023cc   0x0000022a   Code   RO         1329    .text.StrFormatPrintf  fsl_str.o
    0x000025f6   0x000025f6   0x00000002   PAD
    0x000025f8   0x000025f8   0x0000002e   Code   RO          436    .text.SysTick_Handler  port.o
    0x00002626   0x00002626   0x00000002   PAD
    0x00002628   0x00002628   0x00000032   Code   RO          670    .text.SystemInit    system_lpc54608.o
    0x0000265a   0x0000265a   0x00000002   PAD
    0x0000265c   0x0000265c   0x00000002   Code   RO          672    .text.SystemInitHook  system_lpc54608.o
    0x0000265e   0x0000265e   0x00000002   PAD
    0x00002660   0x00002660   0x000000ac   Code   RO         1237    .text.Task_Create   freertos_hello.o
    0x0000270c   0x0000270c   0x00000012   Code   RO         1038    .text.USART_EnableContinuousSCLK  fsl_usart.o
    0x0000271e   0x0000271e   0x00000002   PAD
    0x00002720   0x00002720   0x00000044   Code   RO         1042    .text.USART_GetDefaultConfig  fsl_usart.o
    0x00002764   0x00002764   0x00000070   Code   RO         1026    .text.USART_GetInstance  fsl_usart.o
    0x000027d4   0x000027d4   0x00000148   Code   RO         1034    .text.USART_Init    fsl_usart.o
    0x0000291c   0x0000291c   0x000000aa   Code   RO         1046    .text.USART_ReadBlocking  fsl_usart.o
    0x000029c6   0x000029c6   0x00000002   PAD
    0x000029c8   0x000029c8   0x000000f8   Code   RO         1036    .text.USART_SetBaudRate  fsl_usart.o
    0x00002ac0   0x00002ac0   0x000000b8   Code   RO         1048    .text.USART_TransferCreateHandle  fsl_usart.o
    0x00002b78   0x00002b78   0x00000028   Code   RO         1028    .text.USART_TransferGetRxRingBufferLength  fsl_usart.o
    0x00002ba0   0x00002ba0   0x00000248   Code   RO         1050    .text.USART_TransferHandleIRQ  fsl_usart.o
    0x00002de8   0x00002de8   0x0000002e   Code   RO         1072    .text.USART_TransferIsRxRingBufferFull  fsl_usart.o
    0x00002e16   0x00002e16   0x00000002   PAD
    0x00002e18   0x00002e18   0x00000122   Code   RO         1062    .text.USART_TransferReceiveNonBlocking  fsl_usart.o
    0x00002f3a   0x00002f3a   0x00000002   PAD
    0x00002f3c   0x00002f3c   0x00000078   Code   RO         1054    .text.USART_TransferSendNonBlocking  fsl_usart.o
    0x00002fb4   0x00002fb4   0x0000003c   Code   RO         1231    .text.USART_UserCallback  freertos_hello.o
    0x00002ff0   0x00002ff0   0x00000048   Code   RO         1044    .text.USART_WriteBlocking  fsl_usart.o
    0x00003038   0x00003038   0x00000020   Code   RO         1104    .text.__NVIC_ClearPendingIRQ  fsl_gint.o
    0x00003058   0x00003058   0x00000020   Code   RO         1181    .text.__NVIC_ClearPendingIRQ  fsl_pint.o
    0x00003078   0x00003078   0x00000020   Code   RO         1074    .text.__NVIC_EnableIRQ  fsl_usart.o
    0x00003098   0x00003098   0x00000020   Code   RO         1120    .text.__NVIC_EnableIRQ  fsl_gint.o
    0x000030b8   0x000030b8   0x00000020   Code   RO         1213    .text.__NVIC_EnableIRQ  fsl_pint.o
    0x000030d8   0x000030d8   0x0000003c   Code   RO         1279    .text.__aeabi_assert  fsl_assert.o
    0x00003114   0x00003114   0x00000040   Code   RO         1241    .text.gint0_callback  freertos_hello.o
    0x00003154   0x00003154   0x00000150   Code   RO         1229    .text.main          freertos_hello.o
    0x000032a4   0x000032a4   0x000000a4   Code   RO          213    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00003348   0x00003348   0x000000ae   Code   RO          201    .text.prvAddNewTaskToReadyList  tasks.o
    0x000033f6   0x000033f6   0x00000002   PAD
    0x000033f8   0x000033f8   0x00000076   Code   RO          454    .text.prvHeapInit   heap_4.o
    0x0000346e   0x0000346e   0x00000002   PAD
    0x00003470   0x00003470   0x000000b0   Code   RO          199    .text.prvInitialiseNewTask  tasks.o
    0x00003520   0x00003520   0x0000006e   Code   RO          313    .text.prvInitialiseTaskLists  tasks.o
    0x0000358e   0x0000358e   0x00000002   PAD
    0x00003590   0x00003590   0x00000062   Code   RO          456    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x000035f2   0x000035f2   0x00000002   PAD
    0x000035f4   0x000035f4   0x00000028   Code   RO          207    .text.prvResetNextTaskUnblockTime  tasks.o
    0x0000361c   0x0000361c   0x00000032   Code   RO          416    .text.prvTaskExitError  port.o
    0x0000364e   0x0000364e   0x00000002   PAD
    0x00003650   0x00003650   0x0000012c   Code   RO          452    .text.pvPortMalloc  heap_4.o
    0x0000377c   0x0000377c   0x00000028   Code   RO          414    .text.pxPortInitialiseStack  port.o
    0x000037a4   0x000037a4   0x0000003c   Code   RO         1245    .text.tick_task     freertos_hello.o
    0x000037e0   0x000037e0   0x00000028   Code   RO           49    .text.uxListRemove  list.o
    0x00003808   0x00003808   0x00000016   Code   RO           41    .text.vListInitialise  list.o
    0x0000381e   0x0000381e   0x00000002   PAD
    0x00003820   0x00003820   0x00000006   Code   RO           43    .text.vListInitialiseItem  list.o
    0x00003826   0x00003826   0x00000002   PAD
    0x00003828   0x00003828   0x0000003a   Code   RO           47    .text.vListInsert   list.o
    0x00003862   0x00003862   0x00000002   PAD
    0x00003864   0x00003864   0x0000001c   Code   RO           45    .text.vListInsertEnd  list.o
    0x00003880   0x00003880   0x00000046   Code   RO          430    .text.vPortEnterCritical  port.o
    0x000038c6   0x000038c6   0x00000002   PAD
    0x000038c8   0x000038c8   0x0000002e   Code   RO          432    .text.vPortExitCritical  port.o
    0x000038f6   0x000038f6   0x00000002   PAD
    0x000038f8   0x000038f8   0x0000007e   Code   RO          458    .text.vPortFree     heap_4.o
    0x00003976   0x00003976   0x00000002   PAD
    0x00003978   0x00003978   0x000000a6   Code   RO          209    .text.vTaskDelayUntil  tasks.o
    0x00003a1e   0x00003a1e   0x00000002   PAD
    0x00003a20   0x00003a20   0x00000010   Code   RO          211    .text.vTaskSuspendAll  tasks.o
    0x00003a30   0x00003a30   0x00000086   Code   RO          229    .text.vTaskSwitchContext  tasks.o
    0x00003ab6   0x00003ab6   0x00000002   PAD
    0x00003ab8   0x00003ab8   0x00000058   Code   RO          197    .text.xTaskCreate   tasks.o
    0x00003b10   0x00003b10   0x0000000c   Code   RO          245    .text.xTaskGetTickCount  tasks.o
    0x00003b1c   0x00003b1c   0x0000014c   Code   RO          243    .text.xTaskIncrementTick  tasks.o
    0x00003c68   0x00003c68   0x00000118   Code   RO          215    .text.xTaskResumeAll  tasks.o
    0x00003d80   0x00003d80   0x0000000e   Code   RO         1453    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00003d8e   0x00003d8e   0x00000002   Code   RO         1454    i.__scatterload_null  mc_w.l(handlers.o)
    0x00003d90   0x00003d90   0x0000000e   Code   RO         1455    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00003d9e   0x00003d9e   0x00000002   PAD
    0x00003da0   0x00003da0   0x0000001c   Data   RO          514    .rodata..L__const.BOARD_BootClockPLL180M.pllSetup  clock_config.o
    0x00003dbc   0x00003dbc   0x00000004   Data   RO         1125    .rodata.cst4        fsl_gint.o
    0x00003dc0   0x00003dc0   0x00000008   Data   RO         1126    .rodata.cst8        fsl_gint.o
    0x00003dc8   0x00003dc8   0x00000008   Data   RO         1219    .rodata.cst8        fsl_pint.o
    0x00003dd0   0x00003dd0   0x00000028   Data   RO          660    .rodata.s_UsartAdapterBase  usart_adapter.o
    0x00003df8   0x00003df8   0x00000002   Data   RO         1127    .rodata.s_gintIRQ   fsl_gint.o
    0x00003dfa   0x00003dfa   0x0000000e   Data   RO          488    .rodata.str1.1      board.o
    0x00003e08   0x00003e08   0x0000005c   Data   RO          613    .rodata.str1.1      serial_manager.o
    0x00003e64   0x00003e64   0x0000002c   Data   RO          635    .rodata.str1.1      serial_port_uart.o
    0x00003e90   0x00003e90   0x0000006b   Data   RO          659    .rodata.str1.1      usart_adapter.o
    0x00003efb   0x00003efb   0x00000015   Data   RO          908    .rodata.str1.1      fsl_common.o
    0x00003f10   0x00003f10   0x00000017   Data   RO          982    .rodata.str1.1      fsl_flexcomm.o
    0x00003f27   0x00003f27   0x00000022   Data   RO         1016    .rodata.str1.1      fsl_reset.o
    0x00003f49   0x00003f49   0x000000b0   Data   RO         1076    .rodata.str1.1      fsl_usart.o
    0x00003ff9   0x00003ff9   0x00000046   Data   RO         1128    .rodata.str1.1      fsl_gint.o
    0x0000403f   0x0000403f   0x00000053   Data   RO         1217    .rodata.str1.1      fsl_pint.o
    0x00004092   0x00004092   0x0000005b   Data   RO         1318    .rodata.str1.1      fsl_debug_console.o
    0x000040ed   0x000040ed   0x00000003   PAD
    0x000040f0   0x000040f0   0x00000020   Data   RO         1452    Region$$Table       anon$$obj.o


    Execution Region RW_m_data (Exec base: 0x20000000, Load base: 0x00004110, Size: 0x00002a58, Max: 0x00027800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00004110   0x00000004   Data   RW          690    .data.SystemCoreClock  system_lpc54608.o
    0x20000004   0x00004114   0x00000054   Data   RW         1255    .data.g_tipString   freertos_hello.o
    0x20000058   0x00004168   0x00000001   Data   RW         1258    .data.rxBufferEmpty  freertos_hello.o
    0x20000059   0x00004169   0x00000003   PAD
    0x2000005c   0x0000416c   0x00000004   Data   RW          442    .data.uxCriticalNesting  port.o
    0x20000060        -       0x00000008   Zero   RW         1257    .bss.g_rxBuffer     freertos_hello.o
    0x20000068        -       0x00000004   Zero   RW         1319    .bss.g_serialHandle  fsl_debug_console.o
    0x2000006c        -       0x00000008   Zero   RW         1256    .bss.g_txBuffer     freertos_hello.o
    0x20000074        -       0x00000030   Zero   RW         1262    .bss.g_uartHandle   freertos_hello.o
    0x200000a4        -       0x00000004   Zero   RW          317    .bss.pxCurrentTCB   tasks.o
    0x200000a8        -       0x00000004   Zero   RW          327    .bss.pxDelayedTaskList  tasks.o
    0x200000ac        -       0x00000004   Zero   RW          466    .bss.pxEnd          heap_4.o
    0x200000b0        -       0x00000004   Zero   RW          328    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200000b4        -       0x00000064   Zero   RW          318    .bss.pxReadyTasksLists  tasks.o
    0x20000118        -       0x00000001   Zero   RW         1261    .bss.rxOnGoing      freertos_hello.o
    0x20000119   0x00004170   0x00000003   PAD
    0x2000011c        -       0x00000004   Zero   RW          872    .bss.s_Pll_Freq     fsl_clock.o
    0x20000120        -       0x0000001c   Zero   RW         1317    .bss.s_debugConsoleState  fsl_debug_console.o
    0x2000013c        -       0x00000028   Zero   RW          984    .bss.s_flexcommHandle  fsl_flexcomm.o
    0x20000164        -       0x00000028   Zero   RW          983    .bss.s_flexcommIrqHandler  fsl_flexcomm.o
    0x2000018c        -       0x00000008   Zero   RW         1124    .bss.s_gintCallback  fsl_gint.o
    0x20000194        -       0x00000020   Zero   RW         1218    .bss.s_pintCallback  fsl_pint.o
    0x200001b4        -       0x00000001   Zero   RW         1259    .bss.txBufferFull   freertos_hello.o
    0x200001b5        -       0x00000001   Zero   RW         1260    .bss.txOnGoing      freertos_hello.o
    0x200001b6        -       0x00002800   Zero   RW          471    .bss.ucHeap         heap_4.o
    0x200029b6   0x00004170   0x00000002   PAD
    0x200029b8        -       0x00000004   Zero   RW          323    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200029bc        -       0x00000004   Zero   RW          334    .bss.uxPendedTicks  tasks.o
    0x200029c0        -       0x00000004   Zero   RW          325    .bss.uxSchedulerSuspended  tasks.o
    0x200029c4        -       0x00000004   Zero   RW          320    .bss.uxTaskNumber   tasks.o
    0x200029c8        -       0x00000004   Zero   RW          319    .bss.uxTopReadyPriority  tasks.o
    0x200029cc        -       0x00000001   Zero   RW          467    .bss.xBlockAllocatedBit  heap_4.o
    0x200029cd   0x00004170   0x00000003   PAD
    0x200029d0        -       0x00000014   Zero   RW          337    .bss.xDelayedTaskList1  tasks.o
    0x200029e4        -       0x00000014   Zero   RW          338    .bss.xDelayedTaskList2  tasks.o
    0x200029f8        -       0x00000004   Zero   RW          468    .bss.xFreeBytesRemaining  heap_4.o
    0x200029fc        -       0x00000004   Zero   RW          470    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002a00        -       0x00000004   Zero   RW          332    .bss.xNextTaskUnblockTime  tasks.o
    0x20002a04        -       0x00000004   Zero   RW          335    .bss.xNumOfOverflows  tasks.o
    0x20002a08        -       0x00000014   Zero   RW          330    .bss.xPendingReadyList  tasks.o
    0x20002a1c        -       0x00000004   Zero   RW          324    .bss.xSchedulerRunning  tasks.o
    0x20002a20        -       0x00000008   Zero   RW          469    .bss.xStart         heap_4.o
    0x20002a28        -       0x00000014   Zero   RW          329    .bss.xSuspendedTaskList  tasks.o
    0x20002a3c        -       0x00000014   Zero   RW          321    .bss.xTasksWaitingTermination  tasks.o
    0x20002a50        -       0x00000004   Zero   RW          326    .bss.xTickCount     tasks.o
    0x20002a54        -       0x00000004   Zero   RW          333    .bss.xYieldPending  tasks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x20002a58, Load base: 0x00004170, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20002a58        -       0x00000400   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x20027c00, Load base: 0x00004170, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20027c00        -       0x00000400   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o



  Load Region LR_m_usb_bdt (Base: 0x40100000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Execution Region ER_m_usb_bdt (Exec base: 0x40100000, Load base: 0x40100000, Size: 0x00000000, Max: 0x00000000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****



  Load Region LR_m_usb_ram (Base: 0x40100000, Size: 0x00000000, Max: 0x00002000, ABSOLUTE)

    Execution Region ER_m_usb_ram (Exec base: 0x40100000, Load base: 0x40100000, Size: 0x00000000, Max: 0x00002000, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        92         28         14          0          0      13045   board.o
       220          0         28          0          0      10769   clock_config.o
      1070        204          0         85         67      18893   freertos_hello.o
        60         44          0          0          0        580   fsl_assert.o
      1132         42          0          0          4      38652   fsl_clock.o
       122         36         21          0          0       9033   fsl_common.o
       568          4         91          0         32       7156   fsl_debug_console.o
      1216        376         23          0         80      14040   fsl_flexcomm.o
       454         44         84          0          8      15087   fsl_gint.o
       264         92          0          0          0      10302   fsl_gpio.o
        54          0          0          0          0      14436   fsl_inputmux.o
       866          0         91          0         32      19758   fsl_pint.o
       192          0         34          0          0       7190   fsl_reset.o
       676         52          0          0          0       6529   fsl_str.o
      2342        304        176          0          0      15880   fsl_usart.o
       642          0          0          0      10261       3510   heap_4.o
       154          0          0          0          0       2056   list.o
        56          0          0          0          0       7705   pin_mux.o
       388          8          0          4          0       3861   port.o
       608          8         92          0          0       7052   serial_manager.o
       272         16         44          0          0       4204   serial_port_uart.o
       560        276        292          0          0       2945   startup_lpc54608.o
        52          0          0          4          0       7855   system_lpc54608.o
      1692          0          0          0        252      26502   tasks.o
       426          8        147          0          0       6146   usart_adapter.o

    ----------------------------------------------------------------------
     14332       1550       1172         96      12792     273186   Object Totals
         0          0         32          0       2048          0   (incl. Generated)
       154          8          3          3          8          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        80         20          0          0          0          0   fsl_power_lib.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        40          0          0          0          0         76   memcpy.o
        36          0          0          0          0        108   memseta.o
        14          0          0          0          0         68   strlen.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
       420         36          0          0          0        548   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

        80         20          0          0          0          0   keil_lib_power.lib
       336         16          0          0          0        548   mc_w.l

    ----------------------------------------------------------------------
       420         36          0          0          0        548   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14752       1586       1172         96      12792     273414   Grand Totals
     14752       1586       1172         96      12792     273414   ELF Image Totals
     14752       1586       1172         96          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15924 (  15.55kB)
    Total RW  Size (RW Data + ZI Data)             12888 (  12.59kB)
    Total ROM Size (Code + RO Data + RW Data)      16020 (  15.64kB)

==============================================================================

